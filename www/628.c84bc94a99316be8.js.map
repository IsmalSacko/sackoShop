{"version":3,"file":"628.c84bc94a99316be8.js","mappings":"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","names":["Range","constructor","hostRef","_this","this","registerInstance","ionChange","createEvent","ionInput","ionFocus","ionBlur","ionKnobMoveStart","ionKnobMoveEnd","rangeId","rangeIds","didLoad","noUpdate","hasFocus","inheritedAttributes","contentEl","initialContentScrollY","compareValues","newVal","oldVal","lower","upper","clampBounds","value","clamp","min","max","ensureValueInBounds","dualKnobs","setupGesture","_asyncToGenerator","rangeSlider","gesture","Promise","resolve","then","__webpack_require__","bind","createGesture","el","gestureName","gesturePriority","threshold","onStart","onMove","ev","onEnd","enable","disabled","handleKeyboard","knob","isIncrease","step","ratioA","ratioB","emit","updateValue","emitValueChange","onBlur","onFocus","pressedKnob","undefined","color","debounce","name","label","pin","pinFormatter","Math","round","snaps","ticks","activeBarStart","labelPlacement","debounceChanged","originalIonInput","debounceEvent","minChanged","newValue","isSafeNumber","updateRatio","maxChanged","stepChanged","activeBarStartChanged","printIonWarning","disabledChanged","valueChanged","oldValue","componentWillLoad","hasAttribute","getAttribute","inheritAriaAttributes","componentDidLoad","connectedCallback","_a","ionContent","findClosestIonContent","querySelector","disconnectedCallback","destroy","getValue","detail","currentX","disableContentScrollY","setPressedKnob","update","clientX","resetContentScrollY","rect","ratio","left","width","isRTL","valueToRatio","ratioToValue","getBoundingClientRect","abs","setFocus","valA","valB","ratioLower","ratioUpper","shadowRoot","knobEl","focus","hasStartSlotContent","hasEndSlotContent","hasLabel","renderRangeSlider","barStart","barEnd","rtl","start","end","tickStyle","tick","c","barStyle","C","ratioMin","ratioMax","active","push","h","class","ref","rangeEl","onPointerUp","map","style","role","part","length","renderKnob","pressed","render","inItem","hostContext","needsStartAdjustment","needsEndAdjustment","mode","getIonMode","renderHiddenInput","JSON","stringify","Host","key","onFocusin","onFocusout","id","createColorClasses","v","getElement","watchers","ariaLabel","onKeyDown","preventDefault","stopPropagation","knobStyle","tabindex","roundToMaxDecimalPlaces","n","references","maxPlaces","r","getDecimalPlaces","toString","split","Number","toFixed","clampedValue","ios","md","selector","closest","cssClassMap","Object","assign","getClassMap","classes","getClassList","Array","isArray","filter","trim","forEach","SCHEME","openURL","_ref","url","direction","animation","test","router","document","_x","_x2","_x3","_x4","apply","arguments"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-range.entry.js","./node_modules/@ionic/core/dist/esm/theme-01f3f29c.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, c as createEvent, h, e as Host, f as getElement } from './index-527b9e34.js';\nimport { f as findClosestIonContent, d as disableContentScrollY, r as resetContentScrollY } from './index-e919e353.js';\nimport { l as isSafeNumber, j as clamp, e as debounceEvent, i as inheritAriaAttributes, d as renderHiddenInput } from './helpers-78efeec3.js';\nimport { p as printIonWarning } from './index-738d7504.js';\nimport { i as isRTL } from './dir-babeabeb.js';\nimport { h as hostContext, c as createColorClasses } from './theme-01f3f29c.js';\nimport { b as getIonMode } from './ionic-global-ca86cf32.js';\n\nfunction getDecimalPlaces(n) {\n    if (!isSafeNumber(n))\n        return 0;\n    if (n % 1 === 0)\n        return 0;\n    return n.toString().split('.')[1].length;\n}\n/**\n * Fixes floating point rounding errors in a result by rounding\n * to the same specificity, or number of decimal places (*not*\n * significant figures) as provided reference numbers. If multiple\n * references are provided, the highest number of decimal places\n * between them will be used.\n *\n * The main use case is when numbers x and y are added to produce n,\n * but x and y are floats, so n may have rounding errors (such as\n * 3.1000000004 instead of 3.1). As long as only addition/subtraction\n * occurs between x and y, the specificity of the result will never\n * increase, so x and y should be passed in as the references.\n *\n * If multiplication, division, or other operations were used to\n * calculate n, the rounded result may have less specificity than\n * desired. For example, 1 / 3 = 0.33333(...), but\n * roundToMaxDecimalPlaces((1 / 3), 1, 3) will return 0, since both\n * 1 and 3 are whole numbers.\n *\n * Note that extremely precise reference numbers may lead to rounding\n * errors not being trimmed, due to the error result having the same or\n * fewer decimal places as the reference(s). This is acceptable as we\n * would not be able to tell the difference between a rounding error\n * and correct value in this case, but it does mean there is an implicit\n * precision limit. If precision that high is needed, it is recommended\n * to use a third party data type designed to handle floating point\n * errors instead.\n *\n * @param n The number to round.\n * @param references Number(s) used to calculate n, or that should otherwise\n * be used as a reference for the desired specificity.\n */\nfunction roundToMaxDecimalPlaces(n, ...references) {\n    if (!isSafeNumber(n))\n        return 0;\n    const maxPlaces = Math.max(...references.map((r) => getDecimalPlaces(r)));\n    return Number(n.toFixed(maxPlaces));\n}\n\nconst rangeIosCss = \":host{--knob-handle-size:calc(var(--knob-size) * 2);display:-ms-flexbox;display:flex;position:relative;-ms-flex:3;flex:3;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.range-disabled){pointer-events:none}::slotted(ion-label){-ms-flex:initial;flex:initial}::slotted(ion-icon[slot]){font-size:24px}.range-slider{position:relative;-ms-flex:1;flex:1;width:100%;height:var(--height);contain:size layout style;cursor:-webkit-grab;cursor:grab;-ms-touch-action:pan-y;touch-action:pan-y}:host(.range-pressed) .range-slider{cursor:-webkit-grabbing;cursor:grabbing}.range-pin{position:absolute;background:var(--ion-color-base);color:var(--ion-color-contrast);text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box}.range-knob-handle{top:calc((var(--height) - var(--knob-handle-size)) / 2);-webkit-margin-start:calc(0px - var(--knob-handle-size) / 2);margin-inline-start:calc(0px - var(--knob-handle-size) / 2);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-pack:center;justify-content:center;width:var(--knob-handle-size);height:var(--knob-handle-size);text-align:center}.range-knob-handle{inset-inline-start:0}:host-context([dir=rtl]) .range-knob-handle{left:unset}[dir=rtl] .range-knob-handle{left:unset}@supports selector(:dir(rtl)){.range-knob-handle:dir(rtl){left:unset}}.range-knob-handle:active,.range-knob-handle:focus{outline:none}.range-bar-container{border-radius:var(--bar-border-radius);top:calc((var(--height) - var(--bar-height)) / 2);position:absolute;width:100%;height:var(--bar-height)}.range-bar-container{inset-inline-start:0}:host-context([dir=rtl]) .range-bar-container{left:unset}[dir=rtl] .range-bar-container{left:unset}@supports selector(:dir(rtl)){.range-bar-container:dir(rtl){left:unset}}.range-bar{border-radius:var(--bar-border-radius);position:absolute;width:100%;height:var(--bar-height);background:var(--bar-background);pointer-events:none}.range-knob{border-radius:var(--knob-border-radius);top:calc(50% - var(--knob-size) / 2);position:absolute;width:var(--knob-size);height:var(--knob-size);background:var(--knob-background);-webkit-box-shadow:var(--knob-box-shadow);box-shadow:var(--knob-box-shadow);z-index:2;pointer-events:none}.range-knob{inset-inline-start:calc(50% - var(--knob-size) / 2)}:host-context([dir=rtl]) .range-knob{left:unset}[dir=rtl] .range-knob{left:unset}@supports selector(:dir(rtl)){.range-knob:dir(rtl){left:unset}}:host(.range-pressed) .range-bar-active{will-change:left, right}:host(.in-item){width:100%}:host([slot=start]),:host([slot=end]){width:auto}:host(.in-item) ::slotted(ion-label){-ms-flex-item-align:center;align-self:center}.range-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;height:inherit}::slotted([slot=label]){max-width:200px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.label-text-wrapper-hidden{display:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center}:host(.range-label-placement-start) .range-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.range-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:0;margin-bottom:0}:host(.range-label-placement-end) .range-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.range-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0;margin-top:0;margin-bottom:0}:host(.range-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:0;margin-bottom:0}:host(.range-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px;max-width:200px}:host(.range-label-placement-stacked) .range-wrapper{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:stretch;align-items:stretch}:host(.range-label-placement-stacked) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top;-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host-context([dir=rtl]):host(.range-label-placement-stacked) .label-text-wrapper,:host-context([dir=rtl]).range-label-placement-stacked .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.range-label-placement-stacked:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.in-item.range-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.range-label-placement-stacked) .native-wrapper{margin-bottom:0px}:host{--knob-border-radius:50%;--knob-background:#ffffff;--knob-box-shadow:0px 0.5px 4px rgba(0, 0, 0, 0.12), 0px 6px 13px rgba(0, 0, 0, 0.12);--knob-size:26px;--bar-height:4px;--bar-background:var(--ion-color-step-900, var(--ion-background-color-step-900, #e6e6e6));--bar-background-active:var(--ion-color-primary, #0054e9);--bar-border-radius:2px;--height:42px}:host(.range-item-start-adjustment){-webkit-padding-start:24px;padding-inline-start:24px}:host(.range-item-end-adjustment){-webkit-padding-end:24px;padding-inline-end:24px}:host(.ion-color) .range-bar-active,:host(.ion-color) .range-tick-active{background:var(--ion-color-base)}::slotted([slot=start]){-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:0;margin-bottom:0}::slotted([slot=end]){-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0;margin-top:0;margin-bottom:0}:host(.range-has-pin:not(.range-label-placement-stacked)){padding-top:calc(8px + 0.75rem)}:host(.range-has-pin.range-label-placement-stacked) .label-text-wrapper{margin-bottom:calc(8px + 0.75rem)}.range-bar-active{bottom:0;width:auto;background:var(--bar-background-active)}.range-bar-active.has-ticks{border-radius:0;-webkit-margin-start:-2px;margin-inline-start:-2px;-webkit-margin-end:-2px;margin-inline-end:-2px}.range-tick{-webkit-margin-start:-2px;margin-inline-start:-2px;border-radius:0;position:absolute;top:17px;width:4px;height:8px;background:var(--ion-color-step-900, var(--ion-background-color-step-900, #e6e6e6));pointer-events:none}.range-tick-active{background:var(--bar-background-active)}.range-pin{-webkit-transform:translate3d(0,  100%,  0) scale(0.01);transform:translate3d(0,  100%,  0) scale(0.01);-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;min-width:28px;-webkit-transition:-webkit-transform 120ms ease;transition:-webkit-transform 120ms ease;transition:transform 120ms ease;transition:transform 120ms ease, -webkit-transform 120ms ease;background:transparent;color:var(--ion-text-color, #000);font-size:0.75rem;text-align:center}.range-knob-pressed .range-pin,.range-knob-handle.ion-focused .range-pin{-webkit-transform:translate3d(0, calc(-100% + 11px), 0) scale(1);transform:translate3d(0, calc(-100% + 11px), 0) scale(1)}:host(.range-disabled){opacity:0.3}\";\nconst IonRangeIosStyle0 = rangeIosCss;\n\nconst rangeMdCss = \":host{--knob-handle-size:calc(var(--knob-size) * 2);display:-ms-flexbox;display:flex;position:relative;-ms-flex:3;flex:3;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.range-disabled){pointer-events:none}::slotted(ion-label){-ms-flex:initial;flex:initial}::slotted(ion-icon[slot]){font-size:24px}.range-slider{position:relative;-ms-flex:1;flex:1;width:100%;height:var(--height);contain:size layout style;cursor:-webkit-grab;cursor:grab;-ms-touch-action:pan-y;touch-action:pan-y}:host(.range-pressed) .range-slider{cursor:-webkit-grabbing;cursor:grabbing}.range-pin{position:absolute;background:var(--ion-color-base);color:var(--ion-color-contrast);text-align:center;-webkit-box-sizing:border-box;box-sizing:border-box}.range-knob-handle{top:calc((var(--height) - var(--knob-handle-size)) / 2);-webkit-margin-start:calc(0px - var(--knob-handle-size) / 2);margin-inline-start:calc(0px - var(--knob-handle-size) / 2);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-pack:center;justify-content:center;width:var(--knob-handle-size);height:var(--knob-handle-size);text-align:center}.range-knob-handle{inset-inline-start:0}:host-context([dir=rtl]) .range-knob-handle{left:unset}[dir=rtl] .range-knob-handle{left:unset}@supports selector(:dir(rtl)){.range-knob-handle:dir(rtl){left:unset}}.range-knob-handle:active,.range-knob-handle:focus{outline:none}.range-bar-container{border-radius:var(--bar-border-radius);top:calc((var(--height) - var(--bar-height)) / 2);position:absolute;width:100%;height:var(--bar-height)}.range-bar-container{inset-inline-start:0}:host-context([dir=rtl]) .range-bar-container{left:unset}[dir=rtl] .range-bar-container{left:unset}@supports selector(:dir(rtl)){.range-bar-container:dir(rtl){left:unset}}.range-bar{border-radius:var(--bar-border-radius);position:absolute;width:100%;height:var(--bar-height);background:var(--bar-background);pointer-events:none}.range-knob{border-radius:var(--knob-border-radius);top:calc(50% - var(--knob-size) / 2);position:absolute;width:var(--knob-size);height:var(--knob-size);background:var(--knob-background);-webkit-box-shadow:var(--knob-box-shadow);box-shadow:var(--knob-box-shadow);z-index:2;pointer-events:none}.range-knob{inset-inline-start:calc(50% - var(--knob-size) / 2)}:host-context([dir=rtl]) .range-knob{left:unset}[dir=rtl] .range-knob{left:unset}@supports selector(:dir(rtl)){.range-knob:dir(rtl){left:unset}}:host(.range-pressed) .range-bar-active{will-change:left, right}:host(.in-item){width:100%}:host([slot=start]),:host([slot=end]){width:auto}:host(.in-item) ::slotted(ion-label){-ms-flex-item-align:center;align-self:center}.range-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;height:inherit}::slotted([slot=label]){max-width:200px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.label-text-wrapper-hidden{display:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center}:host(.range-label-placement-start) .range-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.range-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:0;margin-bottom:0}:host(.range-label-placement-end) .range-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.range-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0;margin-top:0;margin-bottom:0}:host(.range-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:0;margin-bottom:0}:host(.range-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px;max-width:200px}:host(.range-label-placement-stacked) .range-wrapper{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:stretch;align-items:stretch}:host(.range-label-placement-stacked) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top;-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host-context([dir=rtl]):host(.range-label-placement-stacked) .label-text-wrapper,:host-context([dir=rtl]).range-label-placement-stacked .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.range-label-placement-stacked:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.in-item.range-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.range-label-placement-stacked) .native-wrapper{margin-bottom:0px}:host{--knob-border-radius:50%;--knob-background:var(--bar-background-active);--knob-box-shadow:none;--knob-size:18px;--bar-height:2px;--bar-background:rgba(var(--ion-color-primary-rgb, 0, 84, 233), 0.26);--bar-background-active:var(--ion-color-primary, #0054e9);--bar-border-radius:0;--height:42px;--pin-background:var(--ion-color-primary, #0054e9);--pin-color:var(--ion-color-primary-contrast, #fff)}::slotted(:not(ion-icon)[slot=start]),::slotted(:not(ion-icon)[slot=end]),.native-wrapper{font-size:0.75rem}:host(.range-item-start-adjustment){-webkit-padding-start:18px;padding-inline-start:18px}:host(.range-item-end-adjustment){-webkit-padding-end:18px;padding-inline-end:18px}:host(.ion-color) .range-bar{background:rgba(var(--ion-color-base-rgb), 0.26)}:host(.ion-color) .range-bar-active,:host(.ion-color) .range-knob,:host(.ion-color) .range-knob::before,:host(.ion-color) .range-pin,:host(.ion-color) .range-pin::before,:host(.ion-color) .range-tick{background:var(--ion-color-base);color:var(--ion-color-contrast)}::slotted([slot=start]){-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:14px;margin-inline-end:14px;margin-top:0;margin-bottom:0}::slotted([slot=end]){-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:0;margin-inline-end:0;margin-top:0;margin-bottom:0}:host(.range-has-pin:not(.range-label-placement-stacked)){padding-top:1.75rem}:host(.range-has-pin.range-label-placement-stacked) .label-text-wrapper{margin-bottom:1.75rem}.range-bar-active{bottom:0;width:auto;background:var(--bar-background-active)}.range-knob{-webkit-transform:scale(0.67);transform:scale(0.67);-webkit-transition-duration:120ms;transition-duration:120ms;-webkit-transition-property:background-color, border, -webkit-transform;transition-property:background-color, border, -webkit-transform;transition-property:transform, background-color, border;transition-property:transform, background-color, border, -webkit-transform;-webkit-transition-timing-function:ease;transition-timing-function:ease;z-index:2}.range-knob::before{border-radius:50%;position:absolute;width:var(--knob-size);height:var(--knob-size);-webkit-transform:scale(1);transform:scale(1);-webkit-transition:0.267s cubic-bezier(0, 0, 0.58, 1);transition:0.267s cubic-bezier(0, 0, 0.58, 1);background:var(--knob-background);content:\\\"\\\";opacity:0.13;pointer-events:none}.range-knob::before{inset-inline-start:0}.range-tick{position:absolute;top:calc((var(--height) - var(--bar-height)) / 2);width:var(--bar-height);height:var(--bar-height);background:var(--bar-background-active);z-index:1;pointer-events:none}.range-tick-active{background:transparent}.range-pin{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:8px;border-radius:50%;-webkit-transform:translate3d(0,  0,  0) scale(0.01);transform:translate3d(0,  0,  0) scale(0.01);display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:1.75rem;height:1.75rem;-webkit-transition:background 120ms ease, -webkit-transform 120ms ease;transition:background 120ms ease, -webkit-transform 120ms ease;transition:transform 120ms ease, background 120ms ease;transition:transform 120ms ease, background 120ms ease, -webkit-transform 120ms ease;background:var(--pin-background);color:var(--pin-color)}.range-pin::before{bottom:-1px;-webkit-margin-start:-13px;margin-inline-start:-13px;border-radius:50% 50% 50% 0;position:absolute;width:26px;height:26px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transition:background 120ms ease;transition:background 120ms ease;background:var(--pin-background);content:\\\"\\\";z-index:-1}.range-pin::before{inset-inline-start:50%}:host-context([dir=rtl]) .range-pin::before{left:unset}[dir=rtl] .range-pin::before{left:unset}@supports selector(:dir(rtl)){.range-pin::before:dir(rtl){left:unset}}.range-knob-pressed .range-pin,.range-knob-handle.ion-focused .range-pin{-webkit-transform:translate3d(0, calc(-100% + 4px), 0) scale(1);transform:translate3d(0, calc(-100% + 4px), 0) scale(1)}@media (any-hover: hover){.range-knob-handle:hover .range-knob:before{-webkit-transform:scale(2);transform:scale(2);opacity:0.13}}.range-knob-handle.ion-activated .range-knob:before,.range-knob-handle.ion-focused .range-knob:before,.range-knob-handle.range-knob-pressed .range-knob:before{-webkit-transform:scale(2);transform:scale(2)}.range-knob-handle.ion-focused .range-knob::before{opacity:0.13}.range-knob-handle.ion-activated .range-knob::before,.range-knob-handle.range-knob-pressed .range-knob::before{opacity:0.25}:host(:not(.range-has-pin)) .range-knob-pressed .range-knob,:host(:not(.range-has-pin)) .range-knob-handle.ion-focused .range-knob{-webkit-transform:scale(1);transform:scale(1)}:host(.range-disabled) .range-bar-active,:host(.range-disabled) .range-bar,:host(.range-disabled) .range-tick{background-color:var(--ion-color-step-250, var(--ion-background-color-step-250, #bfbfbf))}:host(.range-disabled) .range-knob{-webkit-transform:scale(0.55);transform:scale(0.55);outline:5px solid #fff;background-color:var(--ion-color-step-250, var(--ion-background-color-step-250, #bfbfbf))}:host(.range-disabled) .label-text-wrapper,:host(.range-disabled) ::slotted([slot=start]),:host(.range-disabled) ::slotted([slot=end]){opacity:0.38}\";\nconst IonRangeMdStyle0 = rangeMdCss;\n\nconst Range = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionKnobMoveStart = createEvent(this, \"ionKnobMoveStart\", 7);\n        this.ionKnobMoveEnd = createEvent(this, \"ionKnobMoveEnd\", 7);\n        this.rangeId = `ion-r-${rangeIds++}`;\n        this.didLoad = false;\n        this.noUpdate = false;\n        this.hasFocus = false;\n        this.inheritedAttributes = {};\n        this.contentEl = null;\n        this.initialContentScrollY = true;\n        /**\n         * Compares two RangeValue inputs to determine if they are different.\n         *\n         * @param newVal - The new value.\n         * @param oldVal - The old value.\n         * @returns `true` if the values are different, `false` otherwise.\n         */\n        this.compareValues = (newVal, oldVal) => {\n            if (typeof newVal === 'object' && typeof oldVal === 'object') {\n                return newVal.lower !== oldVal.lower || newVal.upper !== oldVal.upper;\n            }\n            return newVal !== oldVal;\n        };\n        this.clampBounds = (value) => {\n            return clamp(this.min, value, this.max);\n        };\n        this.ensureValueInBounds = (value) => {\n            if (this.dualKnobs) {\n                return {\n                    lower: this.clampBounds(value.lower),\n                    upper: this.clampBounds(value.upper),\n                };\n            }\n            else {\n                return this.clampBounds(value);\n            }\n        };\n        this.setupGesture = async () => {\n            const rangeSlider = this.rangeSlider;\n            if (rangeSlider) {\n                this.gesture = (await import('./index-39782642.js')).createGesture({\n                    el: rangeSlider,\n                    gestureName: 'range',\n                    gesturePriority: 100,\n                    /**\n                     * Provide a threshold since the drag movement\n                     * might be a user scrolling the view.\n                     * If this is true, then the range\n                     * should not move.\n                     */\n                    threshold: 10,\n                    onStart: () => this.onStart(),\n                    onMove: (ev) => this.onMove(ev),\n                    onEnd: (ev) => this.onEnd(ev),\n                });\n                this.gesture.enable(!this.disabled);\n            }\n        };\n        this.handleKeyboard = (knob, isIncrease) => {\n            const { ensureValueInBounds } = this;\n            let step = this.step;\n            step = step > 0 ? step : 1;\n            step = step / (this.max - this.min);\n            if (!isIncrease) {\n                step *= -1;\n            }\n            if (knob === 'A') {\n                this.ratioA = clamp(0, this.ratioA + step, 1);\n            }\n            else {\n                this.ratioB = clamp(0, this.ratioB + step, 1);\n            }\n            this.ionKnobMoveStart.emit({ value: ensureValueInBounds(this.value) });\n            this.updateValue();\n            this.emitValueChange();\n            this.ionKnobMoveEnd.emit({ value: ensureValueInBounds(this.value) });\n        };\n        this.onBlur = () => {\n            if (this.hasFocus) {\n                this.hasFocus = false;\n                this.ionBlur.emit();\n            }\n        };\n        this.onFocus = () => {\n            if (!this.hasFocus) {\n                this.hasFocus = true;\n                this.ionFocus.emit();\n            }\n        };\n        this.ratioA = 0;\n        this.ratioB = 0;\n        this.pressedKnob = undefined;\n        this.color = undefined;\n        this.debounce = undefined;\n        this.name = this.rangeId;\n        this.label = undefined;\n        this.dualKnobs = false;\n        this.min = 0;\n        this.max = 100;\n        this.pin = false;\n        this.pinFormatter = (value) => Math.round(value);\n        this.snaps = false;\n        this.step = 1;\n        this.ticks = true;\n        this.activeBarStart = undefined;\n        this.disabled = false;\n        this.value = 0;\n        this.labelPlacement = 'start';\n    }\n    debounceChanged() {\n        const { ionInput, debounce, originalIonInput } = this;\n        /**\n         * If debounce is undefined, we have to manually revert the ionInput emitter in case\n         * debounce used to be set to a number. Otherwise, the event would stay debounced.\n         */\n        this.ionInput = debounce === undefined ? originalIonInput !== null && originalIonInput !== void 0 ? originalIonInput : ionInput : debounceEvent(ionInput, debounce);\n    }\n    minChanged(newValue) {\n        if (!isSafeNumber(newValue)) {\n            this.min = 0;\n        }\n        if (!this.noUpdate) {\n            this.updateRatio();\n        }\n    }\n    maxChanged(newValue) {\n        if (!isSafeNumber(newValue)) {\n            this.max = 100;\n        }\n        if (!this.noUpdate) {\n            this.updateRatio();\n        }\n    }\n    stepChanged(newValue) {\n        if (!isSafeNumber(newValue)) {\n            this.step = 1;\n        }\n    }\n    activeBarStartChanged() {\n        const { activeBarStart } = this;\n        if (activeBarStart !== undefined) {\n            if (activeBarStart > this.max) {\n                printIonWarning(`Range: The value of activeBarStart (${activeBarStart}) is greater than the max (${this.max}). Valid values are greater than or equal to the min value and less than or equal to the max value.`, this.el);\n                this.activeBarStart = this.max;\n            }\n            else if (activeBarStart < this.min) {\n                printIonWarning(`Range: The value of activeBarStart (${activeBarStart}) is less than the min (${this.min}). Valid values are greater than or equal to the min value and less than or equal to the max value.`, this.el);\n                this.activeBarStart = this.min;\n            }\n        }\n    }\n    disabledChanged() {\n        if (this.gesture) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    valueChanged(newValue, oldValue) {\n        const valuesChanged = this.compareValues(newValue, oldValue);\n        if (valuesChanged) {\n            this.ionInput.emit({ value: this.value });\n        }\n        if (!this.noUpdate) {\n            this.updateRatio();\n        }\n    }\n    componentWillLoad() {\n        /**\n         * If user has custom ID set then we should\n         * not assign the default incrementing ID.\n         */\n        if (this.el.hasAttribute('id')) {\n            this.rangeId = this.el.getAttribute('id');\n        }\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\n        // If min, max, or step are not safe, set them to 0, 100, and 1, respectively.\n        // Each watch does this, but not before the initial load.\n        this.min = isSafeNumber(this.min) ? this.min : 0;\n        this.max = isSafeNumber(this.max) ? this.max : 100;\n        this.step = isSafeNumber(this.step) ? this.step : 1;\n    }\n    componentDidLoad() {\n        this.originalIonInput = this.ionInput;\n        this.setupGesture();\n        this.updateRatio();\n        this.didLoad = true;\n    }\n    connectedCallback() {\n        var _a;\n        this.updateRatio();\n        this.debounceChanged();\n        this.disabledChanged();\n        this.activeBarStartChanged();\n        /**\n         * If we have not yet rendered\n         * ion-range, then rangeSlider is not defined.\n         * But if we are moving ion-range via appendChild,\n         * then rangeSlider will be defined.\n         */\n        if (this.didLoad) {\n            this.setupGesture();\n        }\n        const ionContent = findClosestIonContent(this.el);\n        this.contentEl = (_a = ionContent === null || ionContent === void 0 ? void 0 : ionContent.querySelector('.ion-content-scroll-host')) !== null && _a !== void 0 ? _a : ionContent;\n    }\n    disconnectedCallback() {\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    getValue() {\n        var _a;\n        const value = (_a = this.value) !== null && _a !== void 0 ? _a : 0;\n        if (this.dualKnobs) {\n            if (typeof value === 'object') {\n                return value;\n            }\n            return {\n                lower: 0,\n                upper: value,\n            };\n        }\n        else {\n            if (typeof value === 'object') {\n                return value.upper;\n            }\n            return value;\n        }\n    }\n    /**\n     * Emits an `ionChange` event.\n     *\n     * This API should be called for user committed changes.\n     * This API should not be used for external value changes.\n     */\n    emitValueChange() {\n        this.value = this.ensureValueInBounds(this.value);\n        this.ionChange.emit({ value: this.value });\n    }\n    /**\n     * The value should be updated on touch end or\n     * when the component is being dragged.\n     * This follows the native behavior of mobile devices.\n     *\n     * For example: When the user lifts their finger from the\n     * screen after tapping the bar or dragging the bar or knob.\n     */\n    onStart() {\n        this.ionKnobMoveStart.emit({ value: this.ensureValueInBounds(this.value) });\n    }\n    /**\n     * The value should be updated while dragging the\n     * bar or knob.\n     *\n     * While the user is dragging, the view\n     * should not scroll. This is to prevent the user from\n     * feeling disoriented while dragging.\n     *\n     * The user can scroll on the view if the knob or\n     * bar is not being dragged.\n     *\n     * @param detail The details of the gesture event.\n     */\n    onMove(detail) {\n        const { contentEl, pressedKnob } = this;\n        const currentX = detail.currentX;\n        /**\n         * Since the user is dragging on the bar or knob, the view should not scroll.\n         *\n         * This only needs to be done once.\n         */\n        if (contentEl && this.pressedKnob === undefined) {\n            this.initialContentScrollY = disableContentScrollY(contentEl);\n        }\n        /**\n         * The `pressedKnob` can be undefined if the user just\n         * started dragging the knob.\n         *\n         * This is necessary to determine which knob the user is dragging,\n         * especially when it's a dual knob.\n         * Plus, it determines when to apply certain styles.\n         *\n         * This only needs to be done once since the knob won't change\n         * while the user is dragging.\n         */\n        if (pressedKnob === undefined) {\n            this.setPressedKnob(currentX);\n        }\n        this.update(currentX);\n    }\n    /**\n     * The value should be updated on touch end:\n     * - When the user lifts their finger from the screen after\n     * tapping the bar.\n     *\n     * @param detail The details of the gesture or mouse event.\n     */\n    onEnd(detail) {\n        var _a;\n        const { contentEl, initialContentScrollY } = this;\n        const currentX = (_a = detail.currentX) !== null && _a !== void 0 ? _a : detail.clientX;\n        /**\n         * The `pressedKnob` can be undefined if the user never\n         * dragged the knob. They just tapped on the bar.\n         *\n         * This is necessary to determine which knob the user is changing,\n         * especially when it's a dual knob.\n         * Plus, it determines when to apply certain styles.\n         */\n        if (this.pressedKnob === undefined) {\n            this.setPressedKnob(currentX);\n        }\n        /**\n         * The user is no longer dragging the bar or\n         * knob (if they were dragging it).\n         *\n         * The user can now scroll on the view in the next gesture event.\n         */\n        if (contentEl && this.pressedKnob !== undefined) {\n            resetContentScrollY(contentEl, initialContentScrollY);\n        }\n        // update the active knob's position\n        this.update(currentX);\n        /**\n         * Reset the pressed knob to undefined since the user\n         * may start dragging a different knob in the next gesture event.\n         */\n        this.pressedKnob = undefined;\n        this.emitValueChange();\n        this.ionKnobMoveEnd.emit({ value: this.ensureValueInBounds(this.value) });\n    }\n    update(currentX) {\n        // figure out where the pointer is currently at\n        // update the knob being interacted with\n        const rect = this.rect;\n        let ratio = clamp(0, (currentX - rect.left) / rect.width, 1);\n        if (isRTL(this.el)) {\n            ratio = 1 - ratio;\n        }\n        if (this.snaps) {\n            // snaps the ratio to the current value\n            ratio = valueToRatio(ratioToValue(ratio, this.min, this.max, this.step), this.min, this.max);\n        }\n        // update which knob is pressed\n        if (this.pressedKnob === 'A') {\n            this.ratioA = ratio;\n        }\n        else {\n            this.ratioB = ratio;\n        }\n        // Update input value\n        this.updateValue();\n    }\n    setPressedKnob(currentX) {\n        const rect = (this.rect = this.rangeSlider.getBoundingClientRect());\n        // figure out which knob they started closer to\n        let ratio = clamp(0, (currentX - rect.left) / rect.width, 1);\n        if (isRTL(this.el)) {\n            ratio = 1 - ratio;\n        }\n        this.pressedKnob = !this.dualKnobs || Math.abs(this.ratioA - ratio) < Math.abs(this.ratioB - ratio) ? 'A' : 'B';\n        this.setFocus(this.pressedKnob);\n    }\n    get valA() {\n        return ratioToValue(this.ratioA, this.min, this.max, this.step);\n    }\n    get valB() {\n        return ratioToValue(this.ratioB, this.min, this.max, this.step);\n    }\n    get ratioLower() {\n        if (this.dualKnobs) {\n            return Math.min(this.ratioA, this.ratioB);\n        }\n        const { activeBarStart } = this;\n        if (activeBarStart == null) {\n            return 0;\n        }\n        return valueToRatio(activeBarStart, this.min, this.max);\n    }\n    get ratioUpper() {\n        if (this.dualKnobs) {\n            return Math.max(this.ratioA, this.ratioB);\n        }\n        return this.ratioA;\n    }\n    updateRatio() {\n        const value = this.getValue();\n        const { min, max } = this;\n        if (this.dualKnobs) {\n            this.ratioA = valueToRatio(value.lower, min, max);\n            this.ratioB = valueToRatio(value.upper, min, max);\n        }\n        else {\n            this.ratioA = valueToRatio(value, min, max);\n        }\n    }\n    updateValue() {\n        this.noUpdate = true;\n        const { valA, valB } = this;\n        this.value = !this.dualKnobs\n            ? valA\n            : {\n                lower: Math.min(valA, valB),\n                upper: Math.max(valA, valB),\n            };\n        this.noUpdate = false;\n    }\n    setFocus(knob) {\n        if (this.el.shadowRoot) {\n            const knobEl = this.el.shadowRoot.querySelector(knob === 'A' ? '.range-knob-a' : '.range-knob-b');\n            if (knobEl) {\n                knobEl.focus();\n            }\n        }\n    }\n    /**\n     * Returns true if content was passed to the \"start\" slot\n     */\n    get hasStartSlotContent() {\n        return this.el.querySelector('[slot=\"start\"]') !== null;\n    }\n    /**\n     * Returns true if content was passed to the \"end\" slot\n     */\n    get hasEndSlotContent() {\n        return this.el.querySelector('[slot=\"end\"]') !== null;\n    }\n    get hasLabel() {\n        return this.label !== undefined || this.el.querySelector('[slot=\"label\"]') !== null;\n    }\n    renderRangeSlider() {\n        var _a;\n        const { min, max, step, handleKeyboard, pressedKnob, disabled, pin, ratioLower, ratioUpper, pinFormatter, inheritedAttributes, } = this;\n        let barStart = `${ratioLower * 100}%`;\n        let barEnd = `${100 - ratioUpper * 100}%`;\n        const rtl = isRTL(this.el);\n        const start = rtl ? 'right' : 'left';\n        const end = rtl ? 'left' : 'right';\n        const tickStyle = (tick) => {\n            return {\n                [start]: tick[start],\n            };\n        };\n        if (this.dualKnobs === false) {\n            /**\n             * When the value is less than the activeBarStart or the min value,\n             * the knob will display at the start of the active bar.\n             */\n            if (this.valA < ((_a = this.activeBarStart) !== null && _a !== void 0 ? _a : this.min)) {\n                /**\n                 * Sets the bar positions relative to the upper and lower limits.\n                 * Converts the ratio values into percentages, used as offsets for left/right styles.\n                 *\n                 * The ratioUpper refers to the knob position on the bar.\n                 * The ratioLower refers to the end position of the active bar (the value).\n                 */\n                barStart = `${ratioUpper * 100}%`;\n                barEnd = `${100 - ratioLower * 100}%`;\n            }\n            else {\n                /**\n                 * Otherwise, the knob will display at the end of the active bar.\n                 *\n                 * The ratioLower refers to the start position of the active bar (the value).\n                 * The ratioUpper refers to the knob position on the bar.\n                 */\n                barStart = `${ratioLower * 100}%`;\n                barEnd = `${100 - ratioUpper * 100}%`;\n            }\n        }\n        const barStyle = {\n            [start]: barStart,\n            [end]: barEnd,\n        };\n        const ticks = [];\n        if (this.snaps && this.ticks) {\n            for (let value = min; value <= max; value += step) {\n                const ratio = valueToRatio(value, min, max);\n                const ratioMin = Math.min(ratioLower, ratioUpper);\n                const ratioMax = Math.max(ratioLower, ratioUpper);\n                const tick = {\n                    ratio,\n                    /**\n                     * Sets the tick mark as active when the tick is between the min bounds and the knob.\n                     * When using activeBarStart, the tick mark will be active between the knob and activeBarStart.\n                     */\n                    active: ratio >= ratioMin && ratio <= ratioMax,\n                };\n                tick[start] = `${ratio * 100}%`;\n                ticks.push(tick);\n            }\n        }\n        return (h(\"div\", { class: \"range-slider\", ref: (rangeEl) => (this.rangeSlider = rangeEl),\n            /**\n             * Since the gesture has a threshold, the value\n             * won't change until the user has dragged past\n             * the threshold. This is to prevent the range\n             * from moving when the user is scrolling.\n             *\n             * This results in the value not being updated\n             * and the event emitters not being triggered\n             * if the user taps on the range. This is why\n             * we need to listen for the \"pointerUp\" event.\n             */\n            onPointerUp: (ev) => {\n                /**\n                 * If the user drags the knob on the web\n                 * version (does not occur on mobile),\n                 * the \"pointerUp\" event will be triggered\n                 * along with the gesture's events.\n                 * This leads to duplicate events.\n                 *\n                 * By checking if the pressedKnob is undefined,\n                 * we can determine if the \"pointerUp\" event was\n                 * triggered by a tap or a drag. If it was\n                 * dragged, the pressedKnob will be defined.\n                 */\n                if (this.pressedKnob === undefined) {\n                    this.onStart();\n                    this.onEnd(ev);\n                }\n            } }, ticks.map((tick) => (h(\"div\", { style: tickStyle(tick), role: \"presentation\", class: {\n                'range-tick': true,\n                'range-tick-active': tick.active,\n            }, part: tick.active ? 'tick-active' : 'tick' }))), h(\"div\", { class: \"range-bar-container\" }, h(\"div\", { class: \"range-bar\", role: \"presentation\", part: \"bar\" }), h(\"div\", { class: {\n                'range-bar': true,\n                'range-bar-active': true,\n                'has-ticks': ticks.length > 0,\n            }, role: \"presentation\", style: barStyle, part: \"bar-active\" })), renderKnob(rtl, {\n            knob: 'A',\n            pressed: pressedKnob === 'A',\n            value: this.valA,\n            ratio: this.ratioA,\n            pin,\n            pinFormatter,\n            disabled,\n            handleKeyboard,\n            min,\n            max,\n            inheritedAttributes,\n        }), this.dualKnobs &&\n            renderKnob(rtl, {\n                knob: 'B',\n                pressed: pressedKnob === 'B',\n                value: this.valB,\n                ratio: this.ratioB,\n                pin,\n                pinFormatter,\n                disabled,\n                handleKeyboard,\n                min,\n                max,\n                inheritedAttributes,\n            })));\n    }\n    render() {\n        const { disabled, el, hasLabel, rangeId, pin, pressedKnob, labelPlacement, label } = this;\n        const inItem = hostContext('ion-item', el);\n        /**\n         * If there is no start content then the knob at\n         * the min value will be cut off by the item margin.\n         */\n        const hasStartContent = (hasLabel && (labelPlacement === 'start' || labelPlacement === 'fixed')) || this.hasStartSlotContent;\n        const needsStartAdjustment = inItem && !hasStartContent;\n        /**\n         * If there is no end content then the knob at\n         * the max value will be cut off by the item margin.\n         */\n        const hasEndContent = (hasLabel && labelPlacement === 'end') || this.hasEndSlotContent;\n        const needsEndAdjustment = inItem && !hasEndContent;\n        const mode = getIonMode(this);\n        renderHiddenInput(true, el, this.name, JSON.stringify(this.getValue()), disabled);\n        return (h(Host, { key: 'e97cb7eab877eb1624429b4a79107130c6809cf5', onFocusin: this.onFocus, onFocusout: this.onBlur, id: rangeId, class: createColorClasses(this.color, {\n                [mode]: true,\n                'in-item': inItem,\n                'range-disabled': disabled,\n                'range-pressed': pressedKnob !== undefined,\n                'range-has-pin': pin,\n                [`range-label-placement-${labelPlacement}`]: true,\n                'range-item-start-adjustment': needsStartAdjustment,\n                'range-item-end-adjustment': needsEndAdjustment,\n            }) }, h(\"label\", { key: 'a43e9859f74f83460439efefccb5fbb9f387c9ee', class: \"range-wrapper\", id: \"range-label\" }, h(\"div\", { key: '75352a30f30dbd0228c6138eb4324a5c021dbb48', class: {\n                'label-text-wrapper': true,\n                'label-text-wrapper-hidden': !hasLabel,\n            }, part: \"label\" }, label !== undefined ? h(\"div\", { class: \"label-text\" }, label) : h(\"slot\", { name: \"label\" })), h(\"div\", { key: '6a3e147c3e5d938bb2b50522a290f6fdfcf40f05', class: \"native-wrapper\" }, h(\"slot\", { key: '6627236eac9f711fa9c27879a017dd994e65811e', name: \"start\" }), this.renderRangeSlider(), h(\"slot\", { key: '6af3bbadacd036bc7cd30732227f76d7c64117fb', name: \"end\" })))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"debounce\": [\"debounceChanged\"],\n        \"min\": [\"minChanged\"],\n        \"max\": [\"maxChanged\"],\n        \"step\": [\"stepChanged\"],\n        \"activeBarStart\": [\"activeBarStartChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nconst renderKnob = (rtl, { knob, value, ratio, min, max, disabled, pressed, pin, handleKeyboard, pinFormatter, inheritedAttributes }) => {\n    const start = rtl ? 'right' : 'left';\n    const knobStyle = () => {\n        const style = {};\n        style[start] = `${ratio * 100}%`;\n        return style;\n    };\n    // The aria label should be preferred over visible text if both are specified\n    const ariaLabel = inheritedAttributes['aria-label'];\n    return (h(\"div\", { onKeyDown: (ev) => {\n            const key = ev.key;\n            if (key === 'ArrowLeft' || key === 'ArrowDown') {\n                handleKeyboard(knob, false);\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n            else if (key === 'ArrowRight' || key === 'ArrowUp') {\n                handleKeyboard(knob, true);\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n        }, class: {\n            'range-knob-handle': true,\n            'range-knob-a': knob === 'A',\n            'range-knob-b': knob === 'B',\n            'range-knob-pressed': pressed,\n            'range-knob-min': value === min,\n            'range-knob-max': value === max,\n            'ion-activatable': true,\n            'ion-focusable': true,\n        }, style: knobStyle(), role: \"slider\", tabindex: disabled ? -1 : 0, \"aria-label\": ariaLabel !== undefined ? ariaLabel : null, \"aria-labelledby\": ariaLabel === undefined ? 'range-label' : null, \"aria-valuemin\": min, \"aria-valuemax\": max, \"aria-disabled\": disabled ? 'true' : null, \"aria-valuenow\": value }, pin && (h(\"div\", { class: \"range-pin\", role: \"presentation\", part: \"pin\" }, pinFormatter(value))), h(\"div\", { class: \"range-knob\", role: \"presentation\", part: \"knob\" })));\n};\nconst ratioToValue = (ratio, min, max, step) => {\n    let value = (max - min) * ratio;\n    if (step > 0) {\n        // round to nearest multiple of step, then add min\n        value = Math.round(value / step) * step + min;\n    }\n    const clampedValue = clamp(min, value, max);\n    return roundToMaxDecimalPlaces(clampedValue, min, max, step);\n};\nconst valueToRatio = (value, min, max) => {\n    return clamp(0, (value - min) / (max - min), 1);\n};\nlet rangeIds = 0;\nRange.style = {\n    ios: IonRangeIosStyle0,\n    md: IonRangeMdStyle0\n};\n\nexport { Range as ion_range };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return typeof color === 'string' && color.length > 0\n        ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter((c) => c != null)\n            .map((c) => c.trim())\n            .filter((c) => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach((c) => (map[c] = true));\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"x_google_ignoreList":[0,1]}