{"version":3,"file":"9160.be32c71156906cfe.js","mappings":"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","names":["hostContext","selector","el","closest","createColorClasses","color","cssClassMap","length","Object","assign","getClassMap","classes","map","getClassList","undefined","Array","isArray","split","filter","c","trim","forEach","SCHEME","openURL","_ref","_asyncToGenerator","url","ev","direction","animation","test","router","document","querySelector","preventDefault","push","_x","_x2","_x3","_x4","apply","this","arguments","Style","Dark","Light","Default","StatusBar","getEngine","capacitor","getCapacitor","isPluginAvailable","Plugins","setStyle","options","engine","getStyle","style","getInfo","getBackdropValueForSheet","x","backdropBreakpoint","slope","b","setCardStatusBarDark","win","innerWidth","setCardStatusBarDefault","defaultStyle","handleCanDismiss","_ref2","canDismiss","GESTURE","isRunning","onFinish","dismiss","oneTimeCallback","calculateSpringStep","t","computeDuration","remaining","velocity","clamp","Math","abs","createSheetEnterAnimation","opts","currentBreakpoint","expandToScroll","shouldShowBackdrop","initialBackdrop","backdropAnimation","createAnimation","fromTo","beforeStyles","afterClearStyles","wrapperAnimation","keyframes","offset","opacity","transform","contentAnimation","maxHeight","createSheetLeaveAnimation","backdropValue","defaultBackdrop","customBackdrop","iosEnterAnimation","baseEl","presentingEl","root","getElementRoot","addElement","querySelectorAll","baseAnimation","easing","duration","addAnimation","beforeAddWrite","ionFooter","ionFooterAlreadyAppended","shadowRoot","footerHeight","clientHeight","clonedFooter","cloneNode","appendChild","setProperty","setAttribute","isMobile","window","hasCardModal","tagName","presentingElement","presentingElRoot","presentingAnimation","overflow","bodyEl","body","transformOffset","CSS","supports","finalTransform","afterStyles","borderRadius","shadowAnimation","iosLeaveAnimation","removeProperty","removeAttribute","beforeClearStyles","currentStep","from","m","mdEnterAnimation","mdLeaveAnimation","Modal","constructor","hostRef","registerInstance","didPresent","createEvent","willPresent","willDismiss","didDismiss","ionBreakpointDidChange","didPresentShorthand","willPresentShorthand","willDismissShorthand","didDismissShorthand","ionMount","lockController","createLockController","triggerController","createTriggerController","coreDelegate","CoreDelegate","isSheetModal","inheritedAttributes","inline","gestureAnimationDismissing","onHandleClick","sheetTransition","handleBehavior","moveToNextBreakpoint","onBackdropTap","BACKDROP","onLifecycle","modalEvent","usersElement","name","LIFECYCLE_MAP","type","CustomEvent","bubbles","cancelable","detail","dispatchEvent","presented","hasController","overlayIndex","delegate","keyboardClose","enterAnimation","leaveAnimation","breakpoints","initialBreakpoint","handle","component","componentProps","cssClass","backdropDismiss","showBackdrop","animated","htmlAttributes","isOpen","trigger","keepContentsMounted","focusTrap","onIsOpenChange","newValue","oldValue","present","triggerChanged","addClickListener","breakpointsChanged","sortedBreakpoints","sort","a","connectedCallback","prepareOverlay","disconnectedCallback","removeClickListener","componentWillLoad","_a","attributesToInherit","inheritAttributes","attribute","r","includes","printIonWarning","id","setOverlayId","componentDidLoad","raf","getDelegate","force","workingDelegate","parentNode","checkCanDismiss","data","role","_this","_this2","unlock","lock","emit","attachComponent","hasLazyBuild","deepReady","waitForMount","writeTask","classList","add","getIonMode","statusBarStyle","keyboardOpenCallback","gesture","enable","addEventListener","KEYBOARD_DID_OPEN","initSheetGesture","initSwipeToClose","_this3","animationBuilder","config","get","ani","findIonContent","printIonContentErrorMsg","createSwipeToCloseGesture","onDismiss","height","offsetHeight","canDismissBlocksGesture","contentEl","scrollEl","initialScrollY","lastStep","createGesture","gestureName","gesturePriority","OVERLAY_GESTURE_PRIORITY","threshold","canStart","target","event","findClosestIonContent","isIonContent","scrollTop","onStart","deltaY","scrollY","disableContentScrollY","progressStart","onMove","step","isAttemptingDismissWithCanDismiss","maxStep","processedStep","clampedStep","progressStep","DISMISS_THRESHOLD","onEnd","velocityY","shouldComplete","newStepValue","getTimeGivenProgression","resetContentScrollY","progressEnd","wrapperEl","moveSheetToBreakpoint","createSheetGesture","backdropEl","getCurrentBreakpoint","onBreakpointChange","SheetDefaults","WRAPPER_KEYFRAMES","BACKDROP_KEYFRAMES","CONTENT_KEYFRAMES","cachedScrollEl","maxBreakpoint","minBreakpoint","childAnimations","find","enableBackdrop","remove","FOCUS_TRAP_DISABLE_CLASS","disableBackdrop","swapFooterVisibility","footer","originalFooter","nextElementSibling","footerToHide","footerToShow","page","breakpoint","breakpointOffset","shouldPreventDismiss","snapToBreakpoint","shouldRemainOpen","Promise","resolve","targetEl","focus","secondToLastBreakpoint","diff","reduce","sheetOnDismiss","_this4","_this5","removeEventListener","dismissed","detachComponent","destroy","onDidDismiss","eventMethod","onWillDismiss","setCurrentBreakpoint","_this6","_this7","_this8","allowedBreakpoints","nextBreakpointIndex","indexOf","nextBreakpoint","render","showHandle","mode","isCardModal","isHandleCycle","h","Host","key","tabindex","zIndex","class","onIonBackdropTap","onIonModalDidPresent","onIonModalWillPresent","onIonModalWillDismiss","onIonModalDidDismiss","ref","visible","tappable","part","tabIndex","onClick","getElement","watchers","ionModalDidPresent","ionModalWillPresent","ionModalWillDismiss","ionModalDidDismiss","ios","md"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/theme-01f3f29c.js","./node_modules/@ionic/core/dist/esm/ion-modal.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return typeof color === 'string' && color.length > 0\n        ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter((c) => c != null)\n            .map((c) => c.trim())\n            .filter((c) => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach((c) => (map[c] = true));\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, c as createEvent, w as writeTask, h, e as Host, f as getElement } from './index-527b9e34.js';\nimport { f as findClosestIonContent, i as isIonContent, d as disableContentScrollY, r as resetContentScrollY, a as findIonContent, p as printIonContentErrorMsg } from './index-e919e353.js';\nimport { C as CoreDelegate, a as attachComponent, d as detachComponent } from './framework-delegate-2eea1763.js';\nimport { g as getElementRoot, j as clamp, r as raf, h as inheritAttributes, k as hasLazyBuild } from './helpers-78efeec3.js';\nimport { c as createLockController } from './lock-controller-316928be.js';\nimport { p as printIonWarning } from './index-738d7504.js';\nimport { g as getCapacitor } from './capacitor-59395cbd.js';\nimport { G as GESTURE, O as OVERLAY_GESTURE_PRIORITY, F as FOCUS_TRAP_DISABLE_CLASS, e as createTriggerController, B as BACKDROP, j as prepareOverlay, k as setOverlayId, f as present, g as dismiss, h as eventMethod } from './overlays-1bc809ec.js';\nimport { g as getClassMap } from './theme-01f3f29c.js';\nimport { e as deepReady, w as waitForMount } from './index-ecb55b8d.js';\nimport { b as getIonMode, c as config } from './ionic-global-ca86cf32.js';\nimport { KEYBOARD_DID_OPEN } from './keyboard-52278bd7.js';\nimport { c as createAnimation } from './animation-eab5a4ca.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-fe2083dc.js';\nimport { createGesture } from './index-39782642.js';\nimport { w as win } from './index-a5d50daf.js';\nimport './hardware-back-button-864101a3.js';\nimport './gesture-controller-314a54f6.js';\nimport './keyboard-73175e24.js';\n\nvar Style;\n(function (Style) {\n    Style[\"Dark\"] = \"DARK\";\n    Style[\"Light\"] = \"LIGHT\";\n    Style[\"Default\"] = \"DEFAULT\";\n})(Style || (Style = {}));\nconst StatusBar = {\n    getEngine() {\n        const capacitor = getCapacitor();\n        if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('StatusBar')) {\n            return capacitor.Plugins.StatusBar;\n        }\n        return undefined;\n    },\n    setStyle(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        engine.setStyle(options);\n    },\n    getStyle: async function () {\n        const engine = this.getEngine();\n        if (!engine) {\n            return Style.Default;\n        }\n        const { style } = await engine.getInfo();\n        return style;\n    },\n};\n\n/**\n * Use y = mx + b to\n * figure out the backdrop value\n * at a particular x coordinate. This\n * is useful when the backdrop does\n * not begin to fade in until after\n * the 0 breakpoint.\n */\nconst getBackdropValueForSheet = (x, backdropBreakpoint) => {\n    /**\n     * We will use these points:\n     * (backdropBreakpoint, 0)\n     * (maxBreakpoint, 1)\n     * We know that at the beginning breakpoint,\n     * the backdrop will be hidden. We also\n     * know that at the maxBreakpoint, the backdrop\n     * must be fully visible. maxBreakpoint should\n     * always be 1 even if the maximum value\n     * of the breakpoints array is not 1 since\n     * the animation runs from a progress of 0\n     * to a progress of 1.\n     * m = (y2 - y1) / (x2 - x1)\n     *\n     * This is simplified from:\n     * m = (1 - 0) / (maxBreakpoint - backdropBreakpoint)\n     *\n     * If the backdropBreakpoint is 1, we return 0 as the\n     * backdrop is completely hidden.\n     *\n     */\n    if (backdropBreakpoint === 1) {\n        return 0;\n    }\n    const slope = 1 / (1 - backdropBreakpoint);\n    /**\n     * From here, compute b which is\n     * the backdrop opacity if the offset\n     * is 0. If the backdrop does not\n     * begin to fade in until after the\n     * 0 breakpoint, this b value will be\n     * negative. This is fine as we never pass\n     * b directly into the animation keyframes.\n     * b = y - mx\n     * Use a known point: (backdropBreakpoint, 0)\n     * This is simplified from:\n     * b = 0 - (backdropBreakpoint * slope)\n     */\n    const b = -(backdropBreakpoint * slope);\n    /**\n     * Finally, we can now determine the\n     * backdrop offset given an arbitrary\n     * gesture offset.\n     */\n    return x * slope + b;\n};\n/**\n * The tablet/desktop card modal activates\n * when the window width is >= 768.\n * At that point, the presenting element\n * is not transformed, so we do not need to\n * adjust the status bar color.\n *\n */\nconst setCardStatusBarDark = () => {\n    if (!win || win.innerWidth >= 768) {\n        return;\n    }\n    StatusBar.setStyle({ style: Style.Dark });\n};\nconst setCardStatusBarDefault = (defaultStyle = Style.Default) => {\n    if (!win || win.innerWidth >= 768) {\n        return;\n    }\n    StatusBar.setStyle({ style: defaultStyle });\n};\n\nconst handleCanDismiss = async (el, animation) => {\n    /**\n     * If canDismiss is not a function\n     * then we can return early. If canDismiss is `true`,\n     * then canDismissBlocksGesture is `false` as canDismiss\n     * will never interrupt the gesture. As a result,\n     * this code block is never reached. If canDismiss is `false`,\n     * then we never dismiss.\n     */\n    if (typeof el.canDismiss !== 'function') {\n        return;\n    }\n    /**\n     * Run the canDismiss callback.\n     * If the function returns `true`,\n     * then we can proceed with dismiss.\n     */\n    const shouldDismiss = await el.canDismiss(undefined, GESTURE);\n    if (!shouldDismiss) {\n        return;\n    }\n    /**\n     * If canDismiss resolved after the snap\n     * back animation finished, we can\n     * dismiss immediately.\n     *\n     * If canDismiss resolved before the snap\n     * back animation finished, we need to\n     * wait until the snap back animation is\n     * done before dismissing.\n     */\n    if (animation.isRunning()) {\n        animation.onFinish(() => {\n            el.dismiss(undefined, 'handler');\n        }, { oneTimeCallback: true });\n    }\n    else {\n        el.dismiss(undefined, 'handler');\n    }\n};\n/**\n * This function lets us simulate a realistic spring-like animation\n * when swiping down on the modal.\n * There are two forces that we need to use to compute the spring physics:\n *\n * 1. Stiffness, k: This is a measure of resistance applied a spring.\n * 2. Dampening, c: This value has the effect of reducing or preventing oscillation.\n *\n * Using these two values, we can calculate the Spring Force and the Dampening Force\n * to compute the total force applied to a spring.\n *\n * Spring Force: This force pulls a spring back into its equilibrium position.\n * Hooke's Law tells us that that spring force (FS) = kX.\n * k is the stiffness of a spring, and X is the displacement of the spring from its\n * equilibrium position. In this case, it is the amount by which the free end\n * of a spring was displaced (stretched/pushed) from its \"relaxed\" position.\n *\n * Dampening Force: This force slows down motion. Without it, a spring would oscillate forever.\n * The dampening force, FD, can be found via this formula: FD = -cv\n * where c the dampening value and v is velocity.\n *\n * Therefore, the resulting force that is exerted on the block is:\n * F = FS + FD = -kX - cv\n *\n * Newton's 2nd Law tells us that F = ma:\n * ma = -kX - cv.\n *\n * For Ionic's purposes, we can assume that m = 1:\n * a = -kX - cv\n *\n * Imagine a block attached to the end of a spring. At equilibrium\n * the block is at position x = 1.\n * Pressing on the block moves it to position x = 0;\n * So, to calculate the displacement, we need to take the\n * current position and subtract the previous position from it.\n * X = x - x0 = 0 - 1 = -1.\n *\n * For Ionic's purposes, we are only pushing on the spring modal\n * so we have a max position of 1.\n * As a result, we can expand displacement to this formula:\n * X = x - 1\n *\n * a = -k(x - 1) - cv\n *\n * We can represent the motion of something as a function of time: f(t) = x.\n * The derivative of position gives us the velocity: f'(t)\n * The derivative of the velocity gives us the acceleration: f''(t)\n *\n * We can substitute the formula above with these values:\n *\n * f\"(t) = -k * (f(t) - 1) - c * f'(t)\n *\n * This is called a differential equation.\n *\n * We know that at t = 0, we are at x = 0 because the modal does not move: f(0) = 0\n * This means our velocity is also zero: f'(0) = 0.\n *\n * We can cheat a bit and plug the formula into Wolfram Alpha.\n * However, we need to pick stiffness and dampening values:\n * k = 0.57\n * c = 15\n *\n * I picked these as they are fairly close to native iOS's spring effect\n * with the modal.\n *\n * What we plug in is this: f(0) = 0; f'(0) = 0; f''(t) = -0.57(f(t) - 1) - 15f'(t)\n *\n * The result is a formula that lets us calculate the acceleration\n * for a given time t.\n * Note: This is the approximate form of the solution. Wolfram Alpha will\n * give you a complex differential equation too.\n */\nconst calculateSpringStep = (t) => {\n    return 0.00255275 * 2.71828 ** (-14.9619 * t) - 1.00255 * 2.71828 ** (-0.0380968 * t) + 1;\n};\n\n// Defaults for the card swipe animation\nconst SwipeToCloseDefaults = {\n    MIN_PRESENTING_SCALE: 0.915,\n};\nconst createSwipeToCloseGesture = (el, animation, statusBarStyle, onDismiss) => {\n    /**\n     * The step value at which a card modal\n     * is eligible for dismissing via gesture.\n     */\n    const DISMISS_THRESHOLD = 0.5;\n    const height = el.offsetHeight;\n    let isOpen = false;\n    let canDismissBlocksGesture = false;\n    let contentEl = null;\n    let scrollEl = null;\n    const canDismissMaxStep = 0.2;\n    let initialScrollY = true;\n    let lastStep = 0;\n    const getScrollY = () => {\n        if (contentEl && isIonContent(contentEl)) {\n            return contentEl.scrollY;\n            /**\n             * Custom scroll containers are intended to be\n             * used with virtual scrolling, so we assume\n             * there is scrolling in this case.\n             */\n        }\n        else {\n            return true;\n        }\n    };\n    const canStart = (detail) => {\n        const target = detail.event.target;\n        if (target === null || !target.closest) {\n            return true;\n        }\n        /**\n         * If we are swiping on the content,\n         * swiping should only be possible if\n         * the content is scrolled all the way\n         * to the top so that we do not interfere\n         * with scrolling.\n         *\n         * We cannot assume that the `ion-content`\n         * target will remain consistent between\n         * swipes. For example, when using\n         * ion-nav within a card modal it is\n         * possible to swipe, push a view, and then\n         * swipe again. The target content will not\n         * be the same between swipes.\n         */\n        contentEl = findClosestIonContent(target);\n        if (contentEl) {\n            /**\n             * The card should never swipe to close\n             * on the content with a refresher.\n             * Note: We cannot solve this by making the\n             * swipeToClose gesture have a higher priority\n             * than the refresher gesture as the iOS native\n             * refresh gesture uses a scroll listener in\n             * addition to a gesture.\n             *\n             * Note: Do not use getScrollElement here\n             * because we need this to be a synchronous\n             * operation, and getScrollElement is\n             * asynchronous.\n             */\n            if (isIonContent(contentEl)) {\n                const root = getElementRoot(contentEl);\n                scrollEl = root.querySelector('.inner-scroll');\n            }\n            else {\n                scrollEl = contentEl;\n            }\n            const hasRefresherInContent = !!contentEl.querySelector('ion-refresher');\n            return !hasRefresherInContent && scrollEl.scrollTop === 0;\n        }\n        /**\n         * Card should be swipeable on all\n         * parts of the modal except for the footer.\n         */\n        const footer = target.closest('ion-footer');\n        if (footer === null) {\n            return true;\n        }\n        return false;\n    };\n    const onStart = (detail) => {\n        const { deltaY } = detail;\n        /**\n         * Get the initial scrollY value so\n         * that we can correctly reset the scrollY\n         * prop when the gesture ends.\n         */\n        initialScrollY = getScrollY();\n        /**\n         * If canDismiss is anything other than `true`\n         * then users should be able to swipe down\n         * until a threshold is hit. At that point,\n         * the card modal should not proceed any further.\n         * TODO (FW-937)\n         * Remove undefined check\n         */\n        canDismissBlocksGesture = el.canDismiss !== undefined && el.canDismiss !== true;\n        /**\n         * If we are pulling down, then\n         * it is possible we are pulling on the\n         * content. We do not want scrolling to\n         * happen at the same time as the gesture.\n         */\n        if (deltaY > 0 && contentEl) {\n            disableContentScrollY(contentEl);\n        }\n        animation.progressStart(true, isOpen ? 1 : 0);\n    };\n    const onMove = (detail) => {\n        const { deltaY } = detail;\n        /**\n         * If we are pulling down, then\n         * it is possible we are pulling on the\n         * content. We do not want scrolling to\n         * happen at the same time as the gesture.\n         */\n        if (deltaY > 0 && contentEl) {\n            disableContentScrollY(contentEl);\n        }\n        /**\n         * If we are swiping on the content\n         * then the swipe gesture should only\n         * happen if we are pulling down.\n         *\n         * However, if we pull up and\n         * then down such that the scroll position\n         * returns to 0, we should be able to swipe\n         * the card.\n         */\n        const step = detail.deltaY / height;\n        /**\n         * Check if user is swiping down and\n         * if we have a canDismiss value that\n         * should block the gesture from\n         * proceeding,\n         */\n        const isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\n        /**\n         * If we are blocking the gesture from dismissing,\n         * set the max step value so that the sheet cannot be\n         * completely hidden.\n         */\n        const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n        /**\n         * If we are blocking the gesture from\n         * dismissing, calculate the spring modifier value\n         * this will be added to the starting breakpoint\n         * value to give the gesture a spring-like feeling.\n         * Note that the starting breakpoint is always 0,\n         * so we omit adding 0 to the result.\n         */\n        const processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\n        const clampedStep = clamp(0.0001, processedStep, maxStep);\n        animation.progressStep(clampedStep);\n        /**\n         * When swiping down half way, the status bar style\n         * should be reset to its default value.\n         *\n         * We track lastStep so that we do not fire these\n         * functions on every onMove, only when the user has\n         * crossed a certain threshold.\n         */\n        if (clampedStep >= DISMISS_THRESHOLD && lastStep < DISMISS_THRESHOLD) {\n            setCardStatusBarDefault(statusBarStyle);\n            /**\n             * However, if we swipe back up, then the\n             * status bar style should be set to have light\n             * text on a dark background.\n             */\n        }\n        else if (clampedStep < DISMISS_THRESHOLD && lastStep >= DISMISS_THRESHOLD) {\n            setCardStatusBarDark();\n        }\n        lastStep = clampedStep;\n    };\n    const onEnd = (detail) => {\n        const velocity = detail.velocityY;\n        const step = detail.deltaY / height;\n        const isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\n        const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n        const processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\n        const clampedStep = clamp(0.0001, processedStep, maxStep);\n        const threshold = (detail.deltaY + velocity * 1000) / height;\n        /**\n         * If canDismiss blocks\n         * the swipe gesture, then the\n         * animation can never complete until\n         * canDismiss is checked.\n         */\n        const shouldComplete = !isAttemptingDismissWithCanDismiss && threshold >= DISMISS_THRESHOLD;\n        let newStepValue = shouldComplete ? -0.001 : 0.001;\n        if (!shouldComplete) {\n            animation.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n            newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], clampedStep)[0];\n        }\n        else {\n            animation.easing('cubic-bezier(0.32, 0.72, 0, 1)');\n            newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], clampedStep)[0];\n        }\n        const duration = shouldComplete\n            ? computeDuration(step * height, velocity)\n            : computeDuration((1 - clampedStep) * height, velocity);\n        isOpen = shouldComplete;\n        gesture.enable(false);\n        if (contentEl) {\n            resetContentScrollY(contentEl, initialScrollY);\n        }\n        animation\n            .onFinish(() => {\n            if (!shouldComplete) {\n                gesture.enable(true);\n            }\n        })\n            .progressEnd(shouldComplete ? 1 : 0, newStepValue, duration);\n        /**\n         * If the canDismiss value blocked the gesture\n         * from proceeding, then we should ignore whatever\n         * shouldComplete is. Whether or not the modal\n         * animation should complete is now determined by\n         * canDismiss.\n         *\n         * If the user swiped >25% of the way\n         * to the max step, then we should\n         * check canDismiss. 25% was chosen\n         * to avoid accidental swipes.\n         */\n        if (isAttemptingDismissWithCanDismiss && clampedStep > maxStep / 4) {\n            handleCanDismiss(el, animation);\n        }\n        else if (shouldComplete) {\n            onDismiss();\n        }\n    };\n    const gesture = createGesture({\n        el,\n        gestureName: 'modalSwipeToClose',\n        gesturePriority: OVERLAY_GESTURE_PRIORITY,\n        direction: 'y',\n        threshold: 10,\n        canStart,\n        onStart,\n        onMove,\n        onEnd,\n    });\n    return gesture;\n};\nconst computeDuration = (remaining, velocity) => {\n    return clamp(400, remaining / Math.abs(velocity * 1.1), 500);\n};\n\nconst createSheetEnterAnimation = (opts) => {\n    const { currentBreakpoint, backdropBreakpoint, expandToScroll } = opts;\n    /**\n     * If the backdropBreakpoint is undefined, then the backdrop\n     * should always fade in. If the backdropBreakpoint came before the\n     * current breakpoint, then the backdrop should be fading in.\n     */\n    const shouldShowBackdrop = backdropBreakpoint === undefined || backdropBreakpoint < currentBreakpoint;\n    const initialBackdrop = shouldShowBackdrop ? `calc(var(--backdrop-opacity) * ${currentBreakpoint})` : '0';\n    const backdropAnimation = createAnimation('backdropAnimation').fromTo('opacity', 0, initialBackdrop);\n    if (shouldShowBackdrop) {\n        backdropAnimation\n            .beforeStyles({\n            'pointer-events': 'none',\n        })\n            .afterClearStyles(['pointer-events']);\n    }\n    const wrapperAnimation = createAnimation('wrapperAnimation').keyframes([\n        { offset: 0, opacity: 1, transform: 'translateY(100%)' },\n        { offset: 1, opacity: 1, transform: `translateY(${100 - currentBreakpoint * 100}%)` },\n    ]);\n    /**\n     * This allows the content to be scrollable at any breakpoint.\n     */\n    const contentAnimation = !expandToScroll\n        ? createAnimation('contentAnimation').keyframes([\n            { offset: 0, opacity: 1, maxHeight: `${(1 - currentBreakpoint) * 100}%` },\n            { offset: 1, opacity: 1, maxHeight: `${currentBreakpoint * 100}%` },\n        ])\n        : undefined;\n    return { wrapperAnimation, backdropAnimation, contentAnimation };\n};\nconst createSheetLeaveAnimation = (opts) => {\n    const { currentBreakpoint, backdropBreakpoint } = opts;\n    /**\n     * Backdrop does not always fade in from 0 to 1 if backdropBreakpoint\n     * is defined, so we need to account for that offset by figuring out\n     * what the current backdrop value should be.\n     */\n    const backdropValue = `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(currentBreakpoint, backdropBreakpoint)})`;\n    const defaultBackdrop = [\n        { offset: 0, opacity: backdropValue },\n        { offset: 1, opacity: 0 },\n    ];\n    const customBackdrop = [\n        { offset: 0, opacity: backdropValue },\n        { offset: backdropBreakpoint, opacity: 0 },\n        { offset: 1, opacity: 0 },\n    ];\n    const backdropAnimation = createAnimation('backdropAnimation').keyframes(backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop);\n    const wrapperAnimation = createAnimation('wrapperAnimation').keyframes([\n        { offset: 0, opacity: 1, transform: `translateY(${100 - currentBreakpoint * 100}%)` },\n        { offset: 1, opacity: 1, transform: `translateY(100%)` },\n    ]);\n    return { wrapperAnimation, backdropAnimation };\n};\n\nconst createEnterAnimation$1 = () => {\n    const backdropAnimation = createAnimation()\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    const wrapperAnimation = createAnimation().fromTo('transform', 'translateY(100vh)', 'translateY(0vh)');\n    return { backdropAnimation, wrapperAnimation, contentAnimation: undefined };\n};\n/**\n * iOS Modal Enter Animation for the Card presentation style\n */\nconst iosEnterAnimation = (baseEl, opts) => {\n    const { presentingEl, currentBreakpoint, expandToScroll } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation, contentAnimation } = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation$1();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({ opacity: 1 });\n    // The content animation is only added if scrolling is enabled for\n    // all the breakpoints.\n    !expandToScroll && (contentAnimation === null || contentAnimation === void 0 ? void 0 : contentAnimation.addElement(baseEl.querySelector('.ion-page')));\n    const baseAnimation = createAnimation('entering-base')\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.32,0.72,0,1)')\n        .duration(500)\n        .addAnimation([wrapperAnimation])\n        .beforeAddWrite(() => {\n        if (expandToScroll) {\n            // Scroll can only be done when the modal is fully expanded.\n            return;\n        }\n        /**\n         * There are some browsers that causes flickering when\n         * dragging the content when scroll is enabled at every\n         * breakpoint. This is due to the wrapper element being\n         * transformed off the screen and having a snap animation.\n         *\n         * A workaround is to clone the footer element and append\n         * it outside of the wrapper element. This way, the footer\n         * is still visible and the drag can be done without\n         * flickering. The original footer is hidden until the modal\n         * is dismissed. This maintains the animation of the footer\n         * when the modal is dismissed.\n         *\n         * The workaround needs to be done before the animation starts\n         * so there are no flickering issues.\n         */\n        const ionFooter = baseEl.querySelector('ion-footer');\n        /**\n         * This check is needed to prevent more than one footer\n         * from being appended to the shadow root.\n         * Otherwise, iOS and MD enter animations would append\n         * the footer twice.\n         */\n        const ionFooterAlreadyAppended = baseEl.shadowRoot.querySelector('ion-footer');\n        if (ionFooter && !ionFooterAlreadyAppended) {\n            const footerHeight = ionFooter.clientHeight;\n            const clonedFooter = ionFooter.cloneNode(true);\n            baseEl.shadowRoot.appendChild(clonedFooter);\n            ionFooter.style.setProperty('display', 'none');\n            ionFooter.setAttribute('aria-hidden', 'true');\n            // Padding is added to prevent some content from being hidden.\n            const page = baseEl.querySelector('.ion-page');\n            page.style.setProperty('padding-bottom', `${footerHeight}px`);\n        }\n    });\n    if (contentAnimation) {\n        baseAnimation.addAnimation(contentAnimation);\n    }\n    if (presentingEl) {\n        const isMobile = window.innerWidth < 768;\n        const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n        const presentingElRoot = getElementRoot(presentingEl);\n        const presentingAnimation = createAnimation().beforeStyles({\n            transform: 'translateY(0)',\n            'transform-origin': 'top center',\n            overflow: 'hidden',\n        });\n        const bodyEl = document.body;\n        if (isMobile) {\n            /**\n             * Fallback for browsers that does not support `max()` (ex: Firefox)\n             * No need to worry about statusbar padding since engines like Gecko\n             * are not used as the engine for standalone Cordova/Capacitor apps\n             */\n            const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n            const modalTransform = hasCardModal ? '-10px' : transformOffset;\n            const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n            const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\n            presentingAnimation\n                .afterStyles({\n                transform: finalTransform,\n            })\n                .beforeAddWrite(() => bodyEl.style.setProperty('background-color', 'black'))\n                .addElement(presentingEl)\n                .keyframes([\n                { offset: 0, filter: 'contrast(1)', transform: 'translateY(0px) scale(1)', borderRadius: '0px' },\n                { offset: 1, filter: 'contrast(0.85)', transform: finalTransform, borderRadius: '10px 10px 0 0' },\n            ]);\n            baseAnimation.addAnimation(presentingAnimation);\n        }\n        else {\n            baseAnimation.addAnimation(backdropAnimation);\n            if (!hasCardModal) {\n                wrapperAnimation.fromTo('opacity', '0', '1');\n            }\n            else {\n                const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n                const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\n                presentingAnimation\n                    .afterStyles({\n                    transform: finalTransform,\n                })\n                    .addElement(presentingElRoot.querySelector('.modal-wrapper'))\n                    .keyframes([\n                    { offset: 0, filter: 'contrast(1)', transform: 'translateY(0) scale(1)' },\n                    { offset: 1, filter: 'contrast(0.85)', transform: finalTransform },\n                ]);\n                const shadowAnimation = createAnimation()\n                    .afterStyles({\n                    transform: finalTransform,\n                })\n                    .addElement(presentingElRoot.querySelector('.modal-shadow'))\n                    .keyframes([\n                    { offset: 0, opacity: '1', transform: 'translateY(0) scale(1)' },\n                    { offset: 1, opacity: '0', transform: finalTransform },\n                ]);\n                baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n            }\n        }\n    }\n    else {\n        baseAnimation.addAnimation(backdropAnimation);\n    }\n    return baseAnimation;\n};\n\nconst createLeaveAnimation$1 = () => {\n    const backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    const wrapperAnimation = createAnimation().fromTo('transform', 'translateY(0vh)', 'translateY(100vh)');\n    return { backdropAnimation, wrapperAnimation };\n};\n/**\n * iOS Modal Leave Animation\n */\nconst iosLeaveAnimation = (baseEl, opts, duration = 500) => {\n    const { presentingEl, currentBreakpoint, expandToScroll } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation$1();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({ opacity: 1 });\n    const baseAnimation = createAnimation('leaving-base')\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.32,0.72,0,1)')\n        .duration(duration)\n        .addAnimation(wrapperAnimation)\n        .beforeAddWrite(() => {\n        if (expandToScroll) {\n            // Scroll can only be done when the modal is fully expanded.\n            return;\n        }\n        /**\n         * If expandToScroll is disabled, we need to swap\n         * the visibility to the original, so the footer\n         * dismisses with the modal and doesn't stay\n         * until the modal is removed from the DOM.\n         */\n        const ionFooter = baseEl.querySelector('ion-footer');\n        if (ionFooter) {\n            const clonedFooter = baseEl.shadowRoot.querySelector('ion-footer');\n            ionFooter.style.removeProperty('display');\n            ionFooter.removeAttribute('aria-hidden');\n            clonedFooter.style.setProperty('display', 'none');\n            clonedFooter.setAttribute('aria-hidden', 'true');\n            const page = baseEl.querySelector('.ion-page');\n            page.style.removeProperty('padding-bottom');\n        }\n    });\n    if (presentingEl) {\n        const isMobile = window.innerWidth < 768;\n        const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n        const presentingElRoot = getElementRoot(presentingEl);\n        const presentingAnimation = createAnimation()\n            .beforeClearStyles(['transform'])\n            .afterClearStyles(['transform'])\n            .onFinish((currentStep) => {\n            // only reset background color if this is the last card-style modal\n            if (currentStep !== 1) {\n                return;\n            }\n            presentingEl.style.setProperty('overflow', '');\n            const numModals = Array.from(bodyEl.querySelectorAll('ion-modal:not(.overlay-hidden)')).filter((m) => m.presentingElement !== undefined).length;\n            if (numModals <= 1) {\n                bodyEl.style.setProperty('background-color', '');\n            }\n        });\n        const bodyEl = document.body;\n        if (isMobile) {\n            const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n            const modalTransform = hasCardModal ? '-10px' : transformOffset;\n            const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n            const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\n            presentingAnimation.addElement(presentingEl).keyframes([\n                { offset: 0, filter: 'contrast(0.85)', transform: finalTransform, borderRadius: '10px 10px 0 0' },\n                { offset: 1, filter: 'contrast(1)', transform: 'translateY(0px) scale(1)', borderRadius: '0px' },\n            ]);\n            baseAnimation.addAnimation(presentingAnimation);\n        }\n        else {\n            baseAnimation.addAnimation(backdropAnimation);\n            if (!hasCardModal) {\n                wrapperAnimation.fromTo('opacity', '1', '0');\n            }\n            else {\n                const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n                const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\n                presentingAnimation\n                    .addElement(presentingElRoot.querySelector('.modal-wrapper'))\n                    .afterStyles({\n                    transform: 'translate3d(0, 0, 0)',\n                })\n                    .keyframes([\n                    { offset: 0, filter: 'contrast(0.85)', transform: finalTransform },\n                    { offset: 1, filter: 'contrast(1)', transform: 'translateY(0) scale(1)' },\n                ]);\n                const shadowAnimation = createAnimation()\n                    .addElement(presentingElRoot.querySelector('.modal-shadow'))\n                    .afterStyles({\n                    transform: 'translateY(0) scale(1)',\n                })\n                    .keyframes([\n                    { offset: 0, opacity: '0', transform: finalTransform },\n                    { offset: 1, opacity: '1', transform: 'translateY(0) scale(1)' },\n                ]);\n                baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n            }\n        }\n    }\n    else {\n        baseAnimation.addAnimation(backdropAnimation);\n    }\n    return baseAnimation;\n};\n\nconst createEnterAnimation = () => {\n    const backdropAnimation = createAnimation()\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    const wrapperAnimation = createAnimation().keyframes([\n        { offset: 0, opacity: 0.01, transform: 'translateY(40px)' },\n        { offset: 1, opacity: 1, transform: `translateY(0px)` },\n    ]);\n    return { backdropAnimation, wrapperAnimation, contentAnimation: undefined };\n};\n/**\n * Md Modal Enter Animation\n */\nconst mdEnterAnimation = (baseEl, opts) => {\n    const { currentBreakpoint, expandToScroll } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation, contentAnimation } = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\n    // The content animation is only added if scrolling is enabled for\n    // all the breakpoints.\n    expandToScroll && (contentAnimation === null || contentAnimation === void 0 ? void 0 : contentAnimation.addElement(baseEl.querySelector('.ion-page')));\n    const baseAnimation = createAnimation()\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.36,0.66,0.04,1)')\n        .duration(280)\n        .addAnimation([backdropAnimation, wrapperAnimation])\n        .beforeAddWrite(() => {\n        if (expandToScroll) {\n            // Scroll can only be done when the modal is fully expanded.\n            return;\n        }\n        /**\n         * There are some browsers that causes flickering when\n         * dragging the content when scroll is enabled at every\n         * breakpoint. This is due to the wrapper element being\n         * transformed off the screen and having a snap animation.\n         *\n         * A workaround is to clone the footer element and append\n         * it outside of the wrapper element. This way, the footer\n         * is still visible and the drag can be done without\n         * flickering. The original footer is hidden until the modal\n         * is dismissed. This maintains the animation of the footer\n         * when the modal is dismissed.\n         *\n         * The workaround needs to be done before the animation starts\n         * so there are no flickering issues.\n         */\n        const ionFooter = baseEl.querySelector('ion-footer');\n        /**\n         * This check is needed to prevent more than one footer\n         * from being appended to the shadow root.\n         * Otherwise, iOS and MD enter animations would append\n         * the footer twice.\n         */\n        const ionFooterAlreadyAppended = baseEl.shadowRoot.querySelector('ion-footer');\n        if (ionFooter && !ionFooterAlreadyAppended) {\n            const footerHeight = ionFooter.clientHeight;\n            const clonedFooter = ionFooter.cloneNode(true);\n            baseEl.shadowRoot.appendChild(clonedFooter);\n            ionFooter.style.setProperty('display', 'none');\n            ionFooter.setAttribute('aria-hidden', 'true');\n            // Padding is added to prevent some content from being hidden.\n            const page = baseEl.querySelector('.ion-page');\n            page.style.setProperty('padding-bottom', `${footerHeight}px`);\n        }\n    });\n    if (contentAnimation) {\n        baseAnimation.addAnimation(contentAnimation);\n    }\n    return baseAnimation;\n};\n\nconst createLeaveAnimation = () => {\n    const backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    const wrapperAnimation = createAnimation().keyframes([\n        { offset: 0, opacity: 0.99, transform: `translateY(0px)` },\n        { offset: 1, opacity: 0, transform: 'translateY(40px)' },\n    ]);\n    return { backdropAnimation, wrapperAnimation };\n};\n/**\n * Md Modal Leave Animation\n */\nconst mdLeaveAnimation = (baseEl, opts) => {\n    const { currentBreakpoint, expandToScroll } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\n    const baseAnimation = createAnimation()\n        .easing('cubic-bezier(0.47,0,0.745,0.715)')\n        .duration(200)\n        .addAnimation([backdropAnimation, wrapperAnimation])\n        .beforeAddWrite(() => {\n        if (expandToScroll) {\n            // Scroll can only be done when the modal is fully expanded.\n            return;\n        }\n        /**\n         * If expandToScroll is disabled, we need to swap\n         * the visibility to the original, so the footer\n         * dismisses with the modal and doesn't stay\n         * until the modal is removed from the DOM.\n         */\n        const ionFooter = baseEl.querySelector('ion-footer');\n        if (ionFooter) {\n            const clonedFooter = baseEl.shadowRoot.querySelector('ion-footer');\n            ionFooter.style.removeProperty('display');\n            ionFooter.removeAttribute('aria-hidden');\n            clonedFooter.style.setProperty('display', 'none');\n            clonedFooter.setAttribute('aria-hidden', 'true');\n            const page = baseEl.querySelector('.ion-page');\n            page.style.removeProperty('padding-bottom');\n        }\n    });\n    return baseAnimation;\n};\n\nconst createSheetGesture = (baseEl, backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, animation, breakpoints = [], expandToScroll, getCurrentBreakpoint, onDismiss, onBreakpointChange) => {\n    // Defaults for the sheet swipe animation\n    const defaultBackdrop = [\n        { offset: 0, opacity: 'var(--backdrop-opacity)' },\n        { offset: 1, opacity: 0.01 },\n    ];\n    const customBackdrop = [\n        { offset: 0, opacity: 'var(--backdrop-opacity)' },\n        { offset: 1 - backdropBreakpoint, opacity: 0 },\n        { offset: 1, opacity: 0 },\n    ];\n    const SheetDefaults = {\n        WRAPPER_KEYFRAMES: [\n            { offset: 0, transform: 'translateY(0%)' },\n            { offset: 1, transform: 'translateY(100%)' },\n        ],\n        BACKDROP_KEYFRAMES: backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop,\n        CONTENT_KEYFRAMES: [\n            { offset: 0, maxHeight: '100%' },\n            { offset: 1, maxHeight: '0%' },\n        ],\n    };\n    const contentEl = baseEl.querySelector('ion-content');\n    const height = wrapperEl.clientHeight;\n    let currentBreakpoint = initialBreakpoint;\n    let offset = 0;\n    let canDismissBlocksGesture = false;\n    let cachedScrollEl = null;\n    const canDismissMaxStep = 0.95;\n    const maxBreakpoint = breakpoints[breakpoints.length - 1];\n    const minBreakpoint = breakpoints[0];\n    const wrapperAnimation = animation.childAnimations.find((ani) => ani.id === 'wrapperAnimation');\n    const backdropAnimation = animation.childAnimations.find((ani) => ani.id === 'backdropAnimation');\n    const contentAnimation = animation.childAnimations.find((ani) => ani.id === 'contentAnimation');\n    const enableBackdrop = () => {\n        baseEl.style.setProperty('pointer-events', 'auto');\n        backdropEl.style.setProperty('pointer-events', 'auto');\n        /**\n         * When the backdrop is enabled, elements such\n         * as inputs should not be focusable outside\n         * the sheet.\n         */\n        baseEl.classList.remove(FOCUS_TRAP_DISABLE_CLASS);\n    };\n    const disableBackdrop = () => {\n        baseEl.style.setProperty('pointer-events', 'none');\n        backdropEl.style.setProperty('pointer-events', 'none');\n        /**\n         * When the backdrop is enabled, elements such\n         * as inputs should not be focusable outside\n         * the sheet.\n         * Adding this class disables focus trapping\n         * for the sheet temporarily.\n         */\n        baseEl.classList.add(FOCUS_TRAP_DISABLE_CLASS);\n    };\n    /**\n     * Toggles the visible modal footer when `expandToScroll` is disabled.\n     * @param footer The footer to show.\n     */\n    const swapFooterVisibility = (footer) => {\n        const originalFooter = baseEl.querySelector('ion-footer');\n        if (!originalFooter) {\n            return;\n        }\n        const clonedFooter = wrapperEl.nextElementSibling;\n        const footerToHide = footer === 'original' ? clonedFooter : originalFooter;\n        const footerToShow = footer === 'original' ? originalFooter : clonedFooter;\n        footerToShow.style.removeProperty('display');\n        footerToShow.removeAttribute('aria-hidden');\n        const page = baseEl.querySelector('.ion-page');\n        if (footer === 'original') {\n            page.style.removeProperty('padding-bottom');\n        }\n        else {\n            const pagePadding = footerToShow.clientHeight;\n            page.style.setProperty('padding-bottom', `${pagePadding}px`);\n        }\n        footerToHide.style.setProperty('display', 'none');\n        footerToHide.setAttribute('aria-hidden', 'true');\n    };\n    /**\n     * After the entering animation completes,\n     * we need to set the animation to go from\n     * offset 0 to offset 1 so that users can\n     * swipe in any direction. We then set the\n     * animation offset to the current breakpoint\n     * so there is no flickering.\n     */\n    if (wrapperAnimation && backdropAnimation) {\n        wrapperAnimation.keyframes([...SheetDefaults.WRAPPER_KEYFRAMES]);\n        backdropAnimation.keyframes([...SheetDefaults.BACKDROP_KEYFRAMES]);\n        contentAnimation === null || contentAnimation === void 0 ? void 0 : contentAnimation.keyframes([...SheetDefaults.CONTENT_KEYFRAMES]);\n        animation.progressStart(true, 1 - currentBreakpoint);\n        /**\n         * If backdrop is not enabled, then content\n         * behind modal should be clickable. To do this, we need\n         * to remove pointer-events from ion-modal as a whole.\n         * ion-backdrop and .modal-wrapper always have pointer-events: auto\n         * applied, so the modal content can still be interacted with.\n         */\n        const shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\n        if (shouldEnableBackdrop) {\n            enableBackdrop();\n        }\n        else {\n            disableBackdrop();\n        }\n    }\n    if (contentEl && currentBreakpoint !== maxBreakpoint && expandToScroll) {\n        contentEl.scrollY = false;\n    }\n    const canStart = (detail) => {\n        /**\n         * If we are swiping on the content, swiping should only be possible if the content\n         * is scrolled all the way to the top so that we do not interfere with scrolling.\n         *\n         * We cannot assume that the `ion-content` target will remain consistent between swipes.\n         * For example, when using ion-nav within a modal it is possible to swipe, push a view,\n         * and then swipe again. The target content will not be the same between swipes.\n         */\n        const contentEl = findClosestIonContent(detail.event.target);\n        currentBreakpoint = getCurrentBreakpoint();\n        /**\n         * If `expandToScroll` is disabled, we should not allow the swipe gesture\n         * to start if the content is not scrolled to the top.\n         */\n        if (!expandToScroll && contentEl) {\n            const scrollEl = isIonContent(contentEl) ? getElementRoot(contentEl).querySelector('.inner-scroll') : contentEl;\n            return scrollEl.scrollTop === 0;\n        }\n        if (currentBreakpoint === 1 && contentEl) {\n            /**\n             * The modal should never swipe to close on the content with a refresher.\n             * Note 1: We cannot solve this by making this gesture have a higher priority than\n             * the refresher gesture as the iOS native refresh gesture uses a scroll listener in\n             * addition to a gesture.\n             *\n             * Note 2: Do not use getScrollElement here because we need this to be a synchronous\n             * operation, and getScrollElement is asynchronous.\n             */\n            const scrollEl = isIonContent(contentEl) ? getElementRoot(contentEl).querySelector('.inner-scroll') : contentEl;\n            const hasRefresherInContent = !!contentEl.querySelector('ion-refresher');\n            return !hasRefresherInContent && scrollEl.scrollTop === 0;\n        }\n        return true;\n    };\n    const onStart = (detail) => {\n        /**\n         * If canDismiss is anything other than `true`\n         * then users should be able to swipe down\n         * until a threshold is hit. At that point,\n         * the card modal should not proceed any further.\n         *\n         * canDismiss is never fired via gesture if there is\n         * no 0 breakpoint. However, it can be fired if the user\n         * presses Esc or the hardware back button.\n         * TODO (FW-937)\n         * Remove undefined check\n         */\n        canDismissBlocksGesture = baseEl.canDismiss !== undefined && baseEl.canDismiss !== true && minBreakpoint === 0;\n        /**\n         * Cache the scroll element reference when the gesture starts,\n         * this allows us to avoid querying the DOM for the target in onMove,\n         * which would impact performance significantly.\n         */\n        if (!expandToScroll) {\n            const targetEl = findClosestIonContent(detail.event.target);\n            cachedScrollEl =\n                targetEl && isIonContent(targetEl) ? getElementRoot(targetEl).querySelector('.inner-scroll') : targetEl;\n        }\n        /**\n         * If expandToScroll is disabled, we need to swap\n         * the footer visibility to the original, so if the modal\n         * is dismissed, the footer dismisses with the modal\n         * and doesn't stay on the screen after the modal is gone.\n         */\n        if (!expandToScroll) {\n            swapFooterVisibility('original');\n        }\n        /**\n         * If we are pulling down, then it is possible we are pulling on the content.\n         * We do not want scrolling to happen at the same time as the gesture.\n         */\n        if (detail.deltaY > 0 && contentEl) {\n            contentEl.scrollY = false;\n        }\n        raf(() => {\n            /**\n             * Dismisses the open keyboard when the sheet drag gesture is started.\n             * Sets the focus onto the modal element.\n             */\n            baseEl.focus();\n        });\n        animation.progressStart(true, 1 - currentBreakpoint);\n    };\n    const onMove = (detail) => {\n        /**\n         * If `expandToScroll` is disabled, and an upwards swipe gesture is done within\n         * the scrollable content, we should not allow the swipe gesture to continue.\n         */\n        if (!expandToScroll && detail.deltaY <= 0 && cachedScrollEl) {\n            return;\n        }\n        /**\n         * If we are pulling down, then it is possible we are pulling on the content.\n         * We do not want scrolling to happen at the same time as the gesture.\n         * This accounts for when the user scrolls down, scrolls all the way up, and then\n         * pulls down again such that the modal should start to move.\n         */\n        if (detail.deltaY > 0 && contentEl) {\n            contentEl.scrollY = false;\n        }\n        /**\n         * Given the change in gesture position on the Y axis,\n         * compute where the offset of the animation should be\n         * relative to where the user dragged.\n         */\n        const initialStep = 1 - currentBreakpoint;\n        const secondToLastBreakpoint = breakpoints.length > 1 ? 1 - breakpoints[1] : undefined;\n        const step = initialStep + detail.deltaY / height;\n        const isAttemptingDismissWithCanDismiss = secondToLastBreakpoint !== undefined && step >= secondToLastBreakpoint && canDismissBlocksGesture;\n        /**\n         * If we are blocking the gesture from dismissing,\n         * set the max step value so that the sheet cannot be\n         * completely hidden.\n         */\n        const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n        /**\n         * If we are blocking the gesture from\n         * dismissing, calculate the spring modifier value\n         * this will be added to the starting breakpoint\n         * value to give the gesture a spring-like feeling.\n         * Note that when isAttemptingDismissWithCanDismiss is true,\n         * the modifier is always added to the breakpoint that\n         * appears right after the 0 breakpoint.\n         *\n         * Note that this modifier is essentially the progression\n         * between secondToLastBreakpoint and maxStep which is\n         * why we subtract secondToLastBreakpoint. This lets us get\n         * the result as a value from 0 to 1.\n         */\n        const processedStep = isAttemptingDismissWithCanDismiss && secondToLastBreakpoint !== undefined\n            ? secondToLastBreakpoint +\n                calculateSpringStep((step - secondToLastBreakpoint) / (maxStep - secondToLastBreakpoint))\n            : step;\n        offset = clamp(0.0001, processedStep, maxStep);\n        animation.progressStep(offset);\n    };\n    const onEnd = (detail) => {\n        /**\n         * If expandToScroll is disabled, we should not allow the moveSheetToBreakpoint\n         * function to be called if the user is trying to swipe content upwards and the content\n         * is not scrolled to the top.\n         */\n        if (!expandToScroll && detail.deltaY <= 0 && cachedScrollEl && cachedScrollEl.scrollTop > 0) {\n            return;\n        }\n        /**\n         * When the gesture releases, we need to determine\n         * the closest breakpoint to snap to.\n         */\n        const velocity = detail.velocityY;\n        const threshold = (detail.deltaY + velocity * 350) / height;\n        const diff = currentBreakpoint - threshold;\n        const closest = breakpoints.reduce((a, b) => {\n            return Math.abs(b - diff) < Math.abs(a - diff) ? b : a;\n        });\n        moveSheetToBreakpoint({\n            breakpoint: closest,\n            breakpointOffset: offset,\n            canDismiss: canDismissBlocksGesture,\n            /**\n             * The swipe is user-driven, so we should\n             * always animate when the gesture ends.\n             */\n            animated: true,\n        });\n    };\n    const moveSheetToBreakpoint = (options) => {\n        const { breakpoint, canDismiss, breakpointOffset, animated } = options;\n        /**\n         * canDismiss should only prevent snapping\n         * when users are trying to dismiss. If canDismiss\n         * is present but the user is trying to swipe upwards,\n         * we should allow that to happen,\n         */\n        const shouldPreventDismiss = canDismiss && breakpoint === 0;\n        const snapToBreakpoint = shouldPreventDismiss ? currentBreakpoint : breakpoint;\n        const shouldRemainOpen = snapToBreakpoint !== 0;\n        currentBreakpoint = 0;\n        /**\n         * Update the animation so that it plays from\n         * the last offset to the closest snap point.\n         */\n        if (wrapperAnimation && backdropAnimation) {\n            wrapperAnimation.keyframes([\n                { offset: 0, transform: `translateY(${breakpointOffset * 100}%)` },\n                { offset: 1, transform: `translateY(${(1 - snapToBreakpoint) * 100}%)` },\n            ]);\n            backdropAnimation.keyframes([\n                {\n                    offset: 0,\n                    opacity: `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(1 - breakpointOffset, backdropBreakpoint)})`,\n                },\n                {\n                    offset: 1,\n                    opacity: `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(snapToBreakpoint, backdropBreakpoint)})`,\n                },\n            ]);\n            if (contentAnimation) {\n                /**\n                 * The modal content should scroll at any breakpoint when expandToScroll\n                 * is disabled. In order to do this, the content needs to be completely\n                 * viewable so scrolling can access everything. Otherwise, the default\n                 * behavior would show the content off the screen and only allow\n                 * scrolling when the sheet is fully expanded.\n                 */\n                contentAnimation.keyframes([\n                    { offset: 0, maxHeight: `${(1 - breakpointOffset) * 100}%` },\n                    { offset: 1, maxHeight: `${snapToBreakpoint * 100}%` },\n                ]);\n            }\n            animation.progressStep(0);\n        }\n        /**\n         * Gesture should remain disabled until the\n         * snapping animation completes.\n         */\n        gesture.enable(false);\n        /**\n         * If expandToScroll is disabled, we need to swap\n         * the footer visibility to the cloned one so the footer\n         * doesn't flicker when the sheet's height is animated.\n         */\n        if (!expandToScroll && shouldRemainOpen) {\n            swapFooterVisibility('cloned');\n        }\n        if (shouldPreventDismiss) {\n            handleCanDismiss(baseEl, animation);\n        }\n        else if (!shouldRemainOpen) {\n            onDismiss();\n        }\n        /**\n         * Enables scrolling immediately if the sheet is about to fully expand\n         * or if it allows scrolling at any breakpoint. Without this, there would\n         * be a ~500ms delay while the modal animation completes, causing a\n         * noticeable lag. Native iOS allows scrolling as soon as the gesture is\n         * released, so we align with that behavior.\n         */\n        if (contentEl && (snapToBreakpoint === breakpoints[breakpoints.length - 1] || !expandToScroll)) {\n            contentEl.scrollY = true;\n        }\n        return new Promise((resolve) => {\n            animation\n                .onFinish(() => {\n                if (shouldRemainOpen) {\n                    /**\n                     * Once the snapping animation completes,\n                     * we need to reset the animation to go\n                     * from 0 to 1 so users can swipe in any direction.\n                     * We then set the animation offset to the current\n                     * breakpoint so that it starts at the snapped position.\n                     */\n                    if (wrapperAnimation && backdropAnimation) {\n                        raf(() => {\n                            wrapperAnimation.keyframes([...SheetDefaults.WRAPPER_KEYFRAMES]);\n                            backdropAnimation.keyframes([...SheetDefaults.BACKDROP_KEYFRAMES]);\n                            contentAnimation === null || contentAnimation === void 0 ? void 0 : contentAnimation.keyframes([...SheetDefaults.CONTENT_KEYFRAMES]);\n                            animation.progressStart(true, 1 - snapToBreakpoint);\n                            currentBreakpoint = snapToBreakpoint;\n                            onBreakpointChange(currentBreakpoint);\n                            /**\n                             * Backdrop should become enabled\n                             * after the backdropBreakpoint value\n                             */\n                            const shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\n                            if (shouldEnableBackdrop) {\n                                enableBackdrop();\n                            }\n                            else {\n                                disableBackdrop();\n                            }\n                            gesture.enable(true);\n                            resolve();\n                        });\n                    }\n                    else {\n                        gesture.enable(true);\n                        resolve();\n                    }\n                }\n                else {\n                    resolve();\n                }\n                /**\n                 * This must be a one time callback\n                 * otherwise a new callback will\n                 * be added every time onEnd runs.\n                 */\n            }, { oneTimeCallback: true })\n                .progressEnd(1, 0, animated ? 500 : 0);\n        });\n    };\n    const gesture = createGesture({\n        el: wrapperEl,\n        gestureName: 'modalSheet',\n        gesturePriority: 40,\n        direction: 'y',\n        threshold: 10,\n        canStart,\n        onStart,\n        onMove,\n        onEnd,\n    });\n    return {\n        gesture,\n        moveSheetToBreakpoint,\n    };\n};\n\nconst modalIosCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;color:var(--ion-text-color, #000);contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, var(--ion-background-color-step-350, #c0c0be));cursor:pointer;z-index:11}.modal-handle::before{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\"\\\"}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host(.modal-sheet.modal-no-expand-scroll) ion-footer{position:absolute;bottom:0;width:var(--width)}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.4)}:host(.modal-card),:host(.modal-sheet){--border-radius:10px}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:10px}}.modal-wrapper{-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0)}@media screen and (max-width: 767px){@supports (width: max(0px, 1px)){:host(.modal-card){--height:calc(100% - max(30px, var(--ion-safe-area-top)) - 10px)}}@supports not (width: max(0px, 1px)){:host(.modal-card){--height:calc(100% - 40px)}}:host(.modal-card) .modal-wrapper{border-start-start-radius:var(--border-radius);border-start-end-radius:var(--border-radius);border-end-end-radius:0;border-end-start-radius:0}:host(.modal-card){--backdrop-opacity:0;--width:100%;-ms-flex-align:end;align-items:flex-end}:host(.modal-card) .modal-shadow{display:none}:host(.modal-card) ion-backdrop{pointer-events:none}}@media screen and (min-width: 768px){:host(.modal-card){--width:calc(100% - 120px);--height:calc(100% - (120px + var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));--max-width:720px;--max-height:1000px;--backdrop-opacity:0;--box-shadow:0px 0px 30px 10px rgba(0, 0, 0, 0.1);-webkit-transition:all 0.5s ease-in-out;transition:all 0.5s ease-in-out}:host(.modal-card) .modal-wrapper{-webkit-box-shadow:none;box-shadow:none}:host(.modal-card) .modal-shadow{-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow)}}:host(.modal-sheet) .modal-wrapper{border-start-start-radius:var(--border-radius);border-start-end-radius:var(--border-radius);border-end-end-radius:0;border-end-start-radius:0}:host(.modal-sheet.modal-no-expand-scroll) ion-footer ion-toolbar:first-of-type{padding-top:6px}\";\nconst IonModalIosStyle0 = modalIosCss;\n\nconst modalMdCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;color:var(--ion-text-color, #000);contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, var(--ion-background-color-step-350, #c0c0be));cursor:pointer;z-index:11}.modal-handle::before{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\"\\\"}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host(.modal-sheet.modal-no-expand-scroll) ion-footer{position:absolute;bottom:0;width:var(--width)}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.32)}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:2px;--box-shadow:0 28px 48px rgba(0, 0, 0, 0.4)}}.modal-wrapper{-webkit-transform:translate3d(0,  40px,  0);transform:translate3d(0,  40px,  0);opacity:0.01}\";\nconst IonModalMdStyle0 = modalMdCss;\n\nconst Modal = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.didPresent = createEvent(this, \"ionModalDidPresent\", 7);\n        this.willPresent = createEvent(this, \"ionModalWillPresent\", 7);\n        this.willDismiss = createEvent(this, \"ionModalWillDismiss\", 7);\n        this.didDismiss = createEvent(this, \"ionModalDidDismiss\", 7);\n        this.ionBreakpointDidChange = createEvent(this, \"ionBreakpointDidChange\", 7);\n        this.didPresentShorthand = createEvent(this, \"didPresent\", 7);\n        this.willPresentShorthand = createEvent(this, \"willPresent\", 7);\n        this.willDismissShorthand = createEvent(this, \"willDismiss\", 7);\n        this.didDismissShorthand = createEvent(this, \"didDismiss\", 7);\n        this.ionMount = createEvent(this, \"ionMount\", 7);\n        this.lockController = createLockController();\n        this.triggerController = createTriggerController();\n        this.coreDelegate = CoreDelegate();\n        this.isSheetModal = false;\n        this.inheritedAttributes = {};\n        this.inline = false;\n        // Whether or not modal is being dismissed via gesture\n        this.gestureAnimationDismissing = false;\n        this.onHandleClick = () => {\n            const { sheetTransition, handleBehavior } = this;\n            if (handleBehavior !== 'cycle' || sheetTransition !== undefined) {\n                /**\n                 * The sheet modal should not advance to the next breakpoint\n                 * if the handle behavior is not `cycle` or if the handle\n                 * is clicked while the sheet is moving to a breakpoint.\n                 */\n                return;\n            }\n            this.moveToNextBreakpoint();\n        };\n        this.onBackdropTap = () => {\n            const { sheetTransition } = this;\n            if (sheetTransition !== undefined) {\n                /**\n                 * When the handle is double clicked at the largest breakpoint,\n                 * it will start to move to the first breakpoint. While transitioning,\n                 * the backdrop will often receive the second click. We prevent the\n                 * backdrop from dismissing the modal while moving between breakpoints.\n                 */\n                return;\n            }\n            this.dismiss(undefined, BACKDROP);\n        };\n        this.onLifecycle = (modalEvent) => {\n            const el = this.usersElement;\n            const name = LIFECYCLE_MAP[modalEvent.type];\n            if (el && name) {\n                const ev = new CustomEvent(name, {\n                    bubbles: false,\n                    cancelable: false,\n                    detail: modalEvent.detail,\n                });\n                el.dispatchEvent(ev);\n            }\n        };\n        this.presented = false;\n        this.hasController = false;\n        this.overlayIndex = undefined;\n        this.delegate = undefined;\n        this.keyboardClose = true;\n        this.enterAnimation = undefined;\n        this.leaveAnimation = undefined;\n        this.breakpoints = undefined;\n        this.expandToScroll = true;\n        this.initialBreakpoint = undefined;\n        this.backdropBreakpoint = 0;\n        this.handle = undefined;\n        this.handleBehavior = 'none';\n        this.component = undefined;\n        this.componentProps = undefined;\n        this.cssClass = undefined;\n        this.backdropDismiss = true;\n        this.showBackdrop = true;\n        this.animated = true;\n        this.presentingElement = undefined;\n        this.htmlAttributes = undefined;\n        this.isOpen = false;\n        this.trigger = undefined;\n        this.keepContentsMounted = false;\n        this.focusTrap = true;\n        this.canDismiss = true;\n    }\n    onIsOpenChange(newValue, oldValue) {\n        if (newValue === true && oldValue === false) {\n            this.present();\n        }\n        else if (newValue === false && oldValue === true) {\n            this.dismiss();\n        }\n    }\n    triggerChanged() {\n        const { trigger, el, triggerController } = this;\n        if (trigger) {\n            triggerController.addClickListener(el, trigger);\n        }\n    }\n    breakpointsChanged(breakpoints) {\n        if (breakpoints !== undefined) {\n            this.sortedBreakpoints = breakpoints.sort((a, b) => a - b);\n        }\n    }\n    connectedCallback() {\n        const { el } = this;\n        prepareOverlay(el);\n        this.triggerChanged();\n    }\n    disconnectedCallback() {\n        this.triggerController.removeClickListener();\n    }\n    componentWillLoad() {\n        var _a;\n        const { breakpoints, initialBreakpoint, el, htmlAttributes } = this;\n        const isSheetModal = (this.isSheetModal = breakpoints !== undefined && initialBreakpoint !== undefined);\n        const attributesToInherit = ['aria-label', 'role'];\n        this.inheritedAttributes = inheritAttributes(el, attributesToInherit);\n        /**\n         * When using a controller modal you can set attributes\n         * using the htmlAttributes property. Since the above attributes\n         * need to be inherited inside of the modal, we need to look\n         * and see if these attributes are being set via htmlAttributes.\n         *\n         * We could alternatively move this to componentDidLoad to simplify the work\n         * here, but we'd then need to make inheritedAttributes a State variable,\n         * thus causing another render to always happen after the first render.\n         */\n        if (htmlAttributes !== undefined) {\n            attributesToInherit.forEach((attribute) => {\n                const attributeValue = htmlAttributes[attribute];\n                if (attributeValue) {\n                    /**\n                     * If an attribute we need to inherit was\n                     * set using htmlAttributes then add it to\n                     * inheritedAttributes and remove it from htmlAttributes.\n                     * This ensures the attribute is inherited and not\n                     * set on the host.\n                     *\n                     * In this case, if an inherited attribute is set\n                     * on the host element and using htmlAttributes then\n                     * htmlAttributes wins, but that's not a pattern that we recommend.\n                     * The only time you'd need htmlAttributes is when using modalController.\n                     */\n                    this.inheritedAttributes = Object.assign(Object.assign({}, this.inheritedAttributes), { [attribute]: htmlAttributes[attribute] });\n                    delete htmlAttributes[attribute];\n                }\n            });\n        }\n        if (isSheetModal) {\n            this.currentBreakpoint = this.initialBreakpoint;\n        }\n        if (breakpoints !== undefined && initialBreakpoint !== undefined && !breakpoints.includes(initialBreakpoint)) {\n            printIonWarning('Your breakpoints array must include the initialBreakpoint value.');\n        }\n        if (!((_a = this.htmlAttributes) === null || _a === void 0 ? void 0 : _a.id)) {\n            setOverlayId(this.el);\n        }\n    }\n    componentDidLoad() {\n        /**\n         * If modal was rendered with isOpen=\"true\"\n         * then we should open modal immediately.\n         */\n        if (this.isOpen === true) {\n            raf(() => this.present());\n        }\n        this.breakpointsChanged(this.breakpoints);\n        /**\n         * When binding values in frameworks such as Angular\n         * it is possible for the value to be set after the Web Component\n         * initializes but before the value watcher is set up in Stencil.\n         * As a result, the watcher callback may not be fired.\n         * We work around this by manually calling the watcher\n         * callback when the component has loaded and the watcher\n         * is configured.\n         */\n        this.triggerChanged();\n    }\n    /**\n     * Determines whether or not an overlay\n     * is being used inline or via a controller/JS\n     * and returns the correct delegate.\n     * By default, subsequent calls to getDelegate\n     * will use a cached version of the delegate.\n     * This is useful for calling dismiss after\n     * present so that the correct delegate is given.\n     */\n    getDelegate(force = false) {\n        if (this.workingDelegate && !force) {\n            return {\n                delegate: this.workingDelegate,\n                inline: this.inline,\n            };\n        }\n        /**\n         * If using overlay inline\n         * we potentially need to use the coreDelegate\n         * so that this works in vanilla JS apps.\n         * If a developer has presented this component\n         * via a controller, then we can assume\n         * the component is already in the\n         * correct place.\n         */\n        const parentEl = this.el.parentNode;\n        const inline = (this.inline = parentEl !== null && !this.hasController);\n        const delegate = (this.workingDelegate = inline ? this.delegate || this.coreDelegate : this.delegate);\n        return { inline, delegate };\n    }\n    /**\n     * Determines whether or not the\n     * modal is allowed to dismiss based\n     * on the state of the canDismiss prop.\n     */\n    async checkCanDismiss(data, role) {\n        const { canDismiss } = this;\n        if (typeof canDismiss === 'function') {\n            return canDismiss(data, role);\n        }\n        return canDismiss;\n    }\n    /**\n     * Present the modal overlay after it has been created.\n     */\n    async present() {\n        const unlock = await this.lockController.lock();\n        if (this.presented) {\n            unlock();\n            return;\n        }\n        const { presentingElement, el } = this;\n        /**\n         * If the modal is presented multiple times (inline modals), we\n         * need to reset the current breakpoint to the initial breakpoint.\n         */\n        this.currentBreakpoint = this.initialBreakpoint;\n        const { inline, delegate } = this.getDelegate(true);\n        /**\n         * Emit ionMount so JS Frameworks have an opportunity\n         * to add the child component to the DOM. The child\n         * component will be assigned to this.usersElement below.\n         */\n        this.ionMount.emit();\n        this.usersElement = await attachComponent(delegate, el, this.component, ['ion-page'], this.componentProps, inline);\n        /**\n         * When using the lazy loaded build of Stencil, we need to wait\n         * for every Stencil component instance to be ready before presenting\n         * otherwise there can be a flash of unstyled content. With the\n         * custom elements bundle we need to wait for the JS framework\n         * mount the inner contents of the overlay otherwise WebKit may\n         * get the transition incorrect.\n         */\n        if (hasLazyBuild(el)) {\n            await deepReady(this.usersElement);\n            /**\n             * If keepContentsMounted=\"true\" then the\n             * JS Framework has already mounted the inner\n             * contents so there is no need to wait.\n             * Otherwise, we need to wait for the JS\n             * Framework to mount the inner contents\n             * of this component.\n             */\n        }\n        else if (!this.keepContentsMounted) {\n            await waitForMount();\n        }\n        writeTask(() => this.el.classList.add('show-modal'));\n        const hasCardModal = presentingElement !== undefined;\n        /**\n         * We need to change the status bar at the\n         * start of the animation so that it completes\n         * by the time the card animation is done.\n         */\n        if (hasCardModal && getIonMode(this) === 'ios') {\n            // Cache the original status bar color before the modal is presented\n            this.statusBarStyle = await StatusBar.getStyle();\n            setCardStatusBarDark();\n        }\n        await present(this, 'modalEnter', iosEnterAnimation, mdEnterAnimation, {\n            presentingEl: presentingElement,\n            currentBreakpoint: this.initialBreakpoint,\n            backdropBreakpoint: this.backdropBreakpoint,\n            expandToScroll: this.expandToScroll,\n        });\n        /* tslint:disable-next-line */\n        if (typeof window !== 'undefined') {\n            /**\n             * This needs to be setup before any\n             * non-transition async work so it can be dereferenced\n             * in the dismiss method. The dismiss method\n             * only waits for the entering transition\n             * to finish. It does not wait for all of the `present`\n             * method to resolve.\n             */\n            this.keyboardOpenCallback = () => {\n                if (this.gesture) {\n                    /**\n                     * When the native keyboard is opened and the webview\n                     * is resized, the gesture implementation will become unresponsive\n                     * and enter a free-scroll mode.\n                     *\n                     * When the keyboard is opened, we disable the gesture for\n                     * a single frame and re-enable once the contents have repositioned\n                     * from the keyboard placement.\n                     */\n                    this.gesture.enable(false);\n                    raf(() => {\n                        if (this.gesture) {\n                            this.gesture.enable(true);\n                        }\n                    });\n                }\n            };\n            window.addEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\n        }\n        if (this.isSheetModal) {\n            this.initSheetGesture();\n        }\n        else if (hasCardModal) {\n            this.initSwipeToClose();\n        }\n        unlock();\n    }\n    initSwipeToClose() {\n        var _a;\n        if (getIonMode(this) !== 'ios') {\n            return;\n        }\n        const { el } = this;\n        // All of the elements needed for the swipe gesture\n        // should be in the DOM and referenced by now, except\n        // for the presenting el\n        const animationBuilder = this.leaveAnimation || config.get('modalLeave', iosLeaveAnimation);\n        const ani = (this.animation = animationBuilder(el, {\n            presentingEl: this.presentingElement,\n            expandToScroll: this.expandToScroll,\n        }));\n        const contentEl = findIonContent(el);\n        if (!contentEl) {\n            printIonContentErrorMsg(el);\n            return;\n        }\n        const statusBarStyle = (_a = this.statusBarStyle) !== null && _a !== void 0 ? _a : Style.Default;\n        this.gesture = createSwipeToCloseGesture(el, ani, statusBarStyle, () => {\n            /**\n             * While the gesture animation is finishing\n             * it is possible for a user to tap the backdrop.\n             * This would result in the dismiss animation\n             * being played again. Typically this is avoided\n             * by setting `presented = false` on the overlay\n             * component; however, we cannot do that here as\n             * that would prevent the element from being\n             * removed from the DOM.\n             */\n            this.gestureAnimationDismissing = true;\n            /**\n             * Reset the status bar style as the dismiss animation\n             * starts otherwise the status bar will be the wrong\n             * color for the duration of the dismiss animation.\n             * The dismiss method does this as well, but\n             * in this case it's only called once the animation\n             * has finished.\n             */\n            setCardStatusBarDefault(this.statusBarStyle);\n            this.animation.onFinish(async () => {\n                await this.dismiss(undefined, GESTURE);\n                this.gestureAnimationDismissing = false;\n            });\n        });\n        this.gesture.enable(true);\n    }\n    initSheetGesture() {\n        const { wrapperEl, initialBreakpoint, backdropBreakpoint } = this;\n        if (!wrapperEl || initialBreakpoint === undefined) {\n            return;\n        }\n        const animationBuilder = this.enterAnimation || config.get('modalEnter', iosEnterAnimation);\n        const ani = (this.animation = animationBuilder(this.el, {\n            presentingEl: this.presentingElement,\n            currentBreakpoint: initialBreakpoint,\n            backdropBreakpoint,\n            expandToScroll: this.expandToScroll,\n        }));\n        ani.progressStart(true, 1);\n        const { gesture, moveSheetToBreakpoint } = createSheetGesture(this.el, this.backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, ani, this.sortedBreakpoints, this.expandToScroll, () => { var _a; return (_a = this.currentBreakpoint) !== null && _a !== void 0 ? _a : 0; }, () => this.sheetOnDismiss(), (breakpoint) => {\n            if (this.currentBreakpoint !== breakpoint) {\n                this.currentBreakpoint = breakpoint;\n                this.ionBreakpointDidChange.emit({ breakpoint });\n            }\n        });\n        this.gesture = gesture;\n        this.moveSheetToBreakpoint = moveSheetToBreakpoint;\n        this.gesture.enable(true);\n    }\n    sheetOnDismiss() {\n        /**\n         * While the gesture animation is finishing\n         * it is possible for a user to tap the backdrop.\n         * This would result in the dismiss animation\n         * being played again. Typically this is avoided\n         * by setting `presented = false` on the overlay\n         * component; however, we cannot do that here as\n         * that would prevent the element from being\n         * removed from the DOM.\n         */\n        this.gestureAnimationDismissing = true;\n        this.animation.onFinish(async () => {\n            this.currentBreakpoint = 0;\n            this.ionBreakpointDidChange.emit({ breakpoint: this.currentBreakpoint });\n            await this.dismiss(undefined, GESTURE);\n            this.gestureAnimationDismissing = false;\n        });\n    }\n    /**\n     * Dismiss the modal overlay after it has been presented.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the modal. For example, 'cancel' or 'backdrop'.\n     *\n     * This is a no-op if the overlay has not been presented yet. If you want\n     * to remove an overlay from the DOM that was never presented, use the\n     * [remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\n     */\n    async dismiss(data, role) {\n        var _a;\n        if (this.gestureAnimationDismissing && role !== GESTURE) {\n            return false;\n        }\n        /**\n         * Because the canDismiss check below is async,\n         * we need to claim a lock before the check happens,\n         * in case the dismiss transition does run.\n         */\n        const unlock = await this.lockController.lock();\n        /**\n         * If a canDismiss handler is responsible\n         * for calling the dismiss method, we should\n         * not run the canDismiss check again.\n         */\n        if (role !== 'handler' && !(await this.checkCanDismiss(data, role))) {\n            unlock();\n            return false;\n        }\n        const { presentingElement } = this;\n        /**\n         * We need to start the status bar change\n         * before the animation so that the change\n         * finishes when the dismiss animation does.\n         */\n        const hasCardModal = presentingElement !== undefined;\n        if (hasCardModal && getIonMode(this) === 'ios') {\n            setCardStatusBarDefault(this.statusBarStyle);\n        }\n        /* tslint:disable-next-line */\n        if (typeof window !== 'undefined' && this.keyboardOpenCallback) {\n            window.removeEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\n            this.keyboardOpenCallback = undefined;\n        }\n        const dismissed = await dismiss(this, data, role, 'modalLeave', iosLeaveAnimation, mdLeaveAnimation, {\n            presentingEl: presentingElement,\n            currentBreakpoint: (_a = this.currentBreakpoint) !== null && _a !== void 0 ? _a : this.initialBreakpoint,\n            backdropBreakpoint: this.backdropBreakpoint,\n            expandToScroll: this.expandToScroll,\n        });\n        if (dismissed) {\n            const { delegate } = this.getDelegate();\n            await detachComponent(delegate, this.usersElement);\n            writeTask(() => this.el.classList.remove('show-modal'));\n            if (this.animation) {\n                this.animation.destroy();\n            }\n            if (this.gesture) {\n                this.gesture.destroy();\n            }\n        }\n        this.currentBreakpoint = undefined;\n        this.animation = undefined;\n        unlock();\n        return dismissed;\n    }\n    /**\n     * Returns a promise that resolves when the modal did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionModalDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the modal will dismiss.\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionModalWillDismiss');\n    }\n    /**\n     * Move a sheet style modal to a specific breakpoint. The breakpoint value must\n     * be a value defined in your `breakpoints` array.\n     */\n    async setCurrentBreakpoint(breakpoint) {\n        if (!this.isSheetModal) {\n            printIonWarning('setCurrentBreakpoint is only supported on sheet modals.');\n            return;\n        }\n        if (!this.breakpoints.includes(breakpoint)) {\n            printIonWarning(`Attempted to set invalid breakpoint value ${breakpoint}. Please double check that the breakpoint value is part of your defined breakpoints.`);\n            return;\n        }\n        const { currentBreakpoint, moveSheetToBreakpoint, canDismiss, breakpoints, animated } = this;\n        if (currentBreakpoint === breakpoint) {\n            return;\n        }\n        if (moveSheetToBreakpoint) {\n            this.sheetTransition = moveSheetToBreakpoint({\n                breakpoint,\n                breakpointOffset: 1 - currentBreakpoint,\n                canDismiss: canDismiss !== undefined && canDismiss !== true && breakpoints[0] === 0,\n                animated,\n            });\n            await this.sheetTransition;\n            this.sheetTransition = undefined;\n        }\n    }\n    /**\n     * Returns the current breakpoint of a sheet style modal\n     */\n    async getCurrentBreakpoint() {\n        return this.currentBreakpoint;\n    }\n    async moveToNextBreakpoint() {\n        const { breakpoints, currentBreakpoint } = this;\n        if (!breakpoints || currentBreakpoint == null) {\n            /**\n             * If the modal does not have breakpoints and/or the current\n             * breakpoint is not set, we can't move to the next breakpoint.\n             */\n            return false;\n        }\n        const allowedBreakpoints = breakpoints.filter((b) => b !== 0);\n        const currentBreakpointIndex = allowedBreakpoints.indexOf(currentBreakpoint);\n        const nextBreakpointIndex = (currentBreakpointIndex + 1) % allowedBreakpoints.length;\n        const nextBreakpoint = allowedBreakpoints[nextBreakpointIndex];\n        /**\n         * Sets the current breakpoint to the next available breakpoint.\n         * If the current breakpoint is the last breakpoint, we set the current\n         * breakpoint to the first non-zero breakpoint to avoid dismissing the sheet.\n         */\n        await this.setCurrentBreakpoint(nextBreakpoint);\n        return true;\n    }\n    render() {\n        const { handle, isSheetModal, presentingElement, htmlAttributes, handleBehavior, inheritedAttributes, focusTrap, expandToScroll, } = this;\n        const showHandle = handle !== false && isSheetModal;\n        const mode = getIonMode(this);\n        const isCardModal = presentingElement !== undefined && mode === 'ios';\n        const isHandleCycle = handleBehavior === 'cycle';\n        return (h(Host, Object.assign({ key: 'e661562f9e4126136cee337e4ab8ca69ac80faae', \"no-router\": true, tabindex: \"-1\" }, htmlAttributes, { style: {\n                zIndex: `${20000 + this.overlayIndex}`,\n            }, class: Object.assign({ [mode]: true, ['modal-default']: !isCardModal && !isSheetModal, [`modal-card`]: isCardModal, [`modal-sheet`]: isSheetModal, [`modal-no-expand-scroll`]: isSheetModal && !expandToScroll, 'overlay-hidden': true, [FOCUS_TRAP_DISABLE_CLASS]: focusTrap === false }, getClassMap(this.cssClass)), onIonBackdropTap: this.onBackdropTap, onIonModalDidPresent: this.onLifecycle, onIonModalWillPresent: this.onLifecycle, onIonModalWillDismiss: this.onLifecycle, onIonModalDidDismiss: this.onLifecycle }), h(\"ion-backdrop\", { key: '9221692e0e111f99e80239ca44faaaed9b288425', ref: (el) => (this.backdropEl = el), visible: this.showBackdrop, tappable: this.backdropDismiss, part: \"backdrop\" }), mode === 'ios' && h(\"div\", { key: '20def7088d31e5eb13c3f2404c514cd8b74cd966', class: \"modal-shadow\" }), h(\"div\", Object.assign({ key: 'b11229330571d4ff7b9136dfdddcd7d759ada876',\n            /*\n              role and aria-modal must be used on the\n              same element. They must also be set inside the\n              shadow DOM otherwise ion-button will not be highlighted\n              when using VoiceOver: https://bugs.webkit.org/show_bug.cgi?id=247134\n            */\n            role: \"dialog\" }, inheritedAttributes, { \"aria-modal\": \"true\", class: \"modal-wrapper ion-overlay-wrapper\", part: \"content\", ref: (el) => (this.wrapperEl = el) }), showHandle && (h(\"button\", { key: '95b2a62477dfbc063a91910f0d37357388cfd914', class: \"modal-handle\",\n            // Prevents the handle from receiving keyboard focus when it does not cycle\n            tabIndex: !isHandleCycle ? -1 : 0, \"aria-label\": \"Activate to adjust the size of the dialog overlaying the screen\", onClick: isHandleCycle ? this.onHandleClick : undefined, part: \"handle\" })), h(\"slot\", { key: 'fba17dfdbdffbfd8992f473f633d172c5124dc19' }))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"isOpen\": [\"onIsOpenChange\"],\n        \"trigger\": [\"triggerChanged\"]\n    }; }\n};\nconst LIFECYCLE_MAP = {\n    ionModalDidPresent: 'ionViewDidEnter',\n    ionModalWillPresent: 'ionViewWillEnter',\n    ionModalWillDismiss: 'ionViewWillLeave',\n    ionModalDidDismiss: 'ionViewDidLeave',\n};\nModal.style = {\n    ios: IonModalIosStyle0,\n    md: IonModalMdStyle0\n};\n\nexport { Modal as ion_modal };\n"],"x_google_ignoreList":[0,1]}